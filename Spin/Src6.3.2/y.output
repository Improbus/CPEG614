Terminals unused in grammar

   PREPROC
   MTYPE
   LABEL
   NON_ATOMIC


Grammar

    0 $accept: program $end

    1 program: units

    2 units: unit
    3      | units unit

    4 unit: proc
    5     | init
    6     | claim
    7     | ltl
    8     | events
    9     | one_decl
   10     | utype
   11     | c_fcts
   12     | ns
   13     | semi
   14     | error

   15 l_par: '('

   16 r_par: ')'

   17 $@1: %empty

   18 $@2: %empty

   19 proc: inst proctype NAME $@1 l_par decl r_par $@2 Opt_priority Opt_enabler body

   20 proctype: PROCTYPE
   21         | D_PROCTYPE

   22 inst: %empty
   23     | ACTIVE
   24     | ACTIVE '[' const_expr ']'
   25     | ACTIVE '[' NAME ']'

   26 $@3: %empty

   27 init: INIT $@3 Opt_priority body

   28 $@4: %empty

   29 ltl: LTL optname2 $@4 ltl_body

   30 ltl_body: '{' full_expr OS '}'
   31         | error

   32 $@5: %empty

   33 claim: CLAIM optname $@5 body

   34 optname: %empty
   35        | NAME

   36 optname2: %empty
   37         | NAME

   38 $@6: %empty

   39 events: TRACE $@6 body

   40 $@7: %empty

   41 utype: TYPEDEF NAME $@7 '{' decl_lst '}'

   42 nm: NAME
   43   | INAME

   44 $@8: %empty

   45 ns: INLINE nm l_par $@8 args r_par

   46 c_fcts: ccode
   47       | cstate

   48 cstate: C_STATE STRING STRING
   49       | C_TRACK STRING STRING
   50       | C_STATE STRING STRING STRING
   51       | C_TRACK STRING STRING STRING

   52 ccode: C_CODE
   53      | C_DECL

   54 cexpr: C_EXPR

   55 $@9: %empty

   56 $@10: %empty

   57 body: '{' $@9 sequence OS $@10 '}'

   58 sequence: step
   59         | sequence MS step

   60 step: one_decl
   61     | XU vref_lst
   62     | NAME ':' one_decl
   63     | NAME ':' XU
   64     | stmnt

   65 $@11: %empty

   66 step: stmnt UNLESS $@11 stmnt

   67 vis: %empty
   68    | HIDDEN
   69    | SHOW
   70    | ISLOCAL

   71 asgn: %empty
   72     | ASGN

   73 one_decl: vis TYPE var_list
   74         | vis UNAME var_list
   75         | vis TYPE asgn '{' nlst '}'

   76 decl_lst: one_decl
   77         | one_decl SEMI decl_lst

   78 decl: %empty
   79     | decl_lst

   80 vref_lst: varref
   81         | varref ',' vref_lst

   82 var_list: ivar
   83         | ivar ',' var_list

   84 c_list: CONST
   85       | CONST ',' c_list

   86 ivar: vardcl
   87     | vardcl ASGN '{' c_list '}'
   88     | vardcl ASGN expr
   89     | vardcl ASGN ch_init

   90 ch_init: '[' const_expr ']' OF '{' typ_list '}'

   91 vardcl: NAME
   92       | NAME ':' CONST
   93       | NAME '[' const_expr ']'

   94 varref: cmpnd

   95 pfld: NAME

   96 $@12: %empty

   97 pfld: NAME $@12 '[' expr ']'

   98 $@13: %empty

   99 cmpnd: pfld $@13 sfld

  100 sfld: %empty
  101     | '.' cmpnd

  102 stmnt: Special
  103      | Stmnt

  104 $@14: %empty

  105 for_pre: FOR l_par $@14 varref

  106 for_post: '{' sequence OS '}'

  107 $@15: %empty

  108 Special: varref RCV $@15 rargs

  109 $@16: %empty

  110 Special: varref SND $@16 margs

  111 $@17: %empty

  112 Special: for_pre ':' expr DOTDOT expr r_par $@17 for_post

  113 @18: %empty

  114 Special: for_pre IN varref r_par @18 for_post
  115        | SELECT l_par varref ':' expr DOTDOT expr r_par
  116        | IF options FI

  117 $@19: %empty

  118 Special: DO $@19 options OD
  119        | BREAK
  120        | GOTO NAME
  121        | NAME ':' stmnt
  122        | NAME ':'
  123        | error

  124 Stmnt: varref ASGN full_expr
  125      | varref INCR
  126      | varref DECR
  127      | SET_P l_par two_args r_par

  128 $@20: %empty

  129 Stmnt: PRINT l_par STRING $@20 prargs r_par
  130      | PRINTM l_par varref r_par
  131      | PRINTM l_par CONST r_par
  132      | ASSERT full_expr
  133      | ccode

  134 $@21: %empty

  135 Stmnt: varref R_RCV $@21 rargs

  136 $@22: %empty

  137 Stmnt: varref RCV $@22 LT rargs GT

  138 $@23: %empty

  139 Stmnt: varref R_RCV $@23 LT rargs GT

  140 $@24: %empty

  141 Stmnt: varref O_SND $@24 margs
  142      | full_expr
  143      | ELSE

  144 $@25: %empty

  145 Stmnt: ATOMIC '{' $@25 sequence OS '}'

  146 $@26: %empty

  147 Stmnt: D_STEP '{' $@26 sequence OS '}'

  148 $@27: %empty

  149 Stmnt: '{' $@27 sequence OS '}'

  150 $@28: %empty

  151 $@29: %empty

  152 Stmnt: INAME $@28 l_par args r_par $@29 Stmnt

  153 $@30: %empty

  154 $@31: %empty

  155 Stmnt: varref ASGN INAME $@30 l_par args r_par $@31 Stmnt
  156      | RETURN full_expr

  157 options: option
  158        | option options

  159 $@32: %empty

  160 option: SEP $@32 sequence OS

  161 OS: %empty
  162   | semi

  163 semi: SEMI
  164     | ARROW

  165 MS: semi
  166   | MS semi

  167 aname: NAME
  168      | PNAME

  169 const_expr: CONST
  170           | '-' const_expr
  171           | l_par const_expr r_par
  172           | const_expr '+' const_expr
  173           | const_expr '-' const_expr
  174           | const_expr '*' const_expr
  175           | const_expr '/' const_expr
  176           | const_expr '%' const_expr

  177 expr: l_par expr r_par
  178     | expr '+' expr
  179     | expr '-' expr
  180     | expr '*' expr
  181     | expr '/' expr
  182     | expr '%' expr
  183     | expr '&' expr
  184     | expr '^' expr
  185     | expr '|' expr
  186     | expr GT expr
  187     | expr LT expr
  188     | expr GE expr
  189     | expr LE expr
  190     | expr EQ expr
  191     | expr NE expr
  192     | expr AND expr
  193     | expr OR expr
  194     | expr LSHIFT expr
  195     | expr RSHIFT expr
  196     | '~' expr
  197     | '-' expr
  198     | SND expr
  199     | l_par expr ARROW expr ':' expr r_par

  200 $@33: %empty

  201 expr: RUN aname $@33 l_par args r_par Opt_priority
  202     | LEN l_par varref r_par
  203     | ENABLED l_par expr r_par
  204     | GET_P l_par expr r_par

  205 $@34: %empty

  206 expr: varref RCV $@34 '[' rargs ']'

  207 $@35: %empty

  208 expr: varref R_RCV $@35 '[' rargs ']'
  209     | varref
  210     | cexpr
  211     | CONST
  212     | TIMEOUT
  213     | NONPROGRESS
  214     | PC_VAL l_par expr r_par
  215     | PNAME '[' expr ']' '@' NAME
  216     | PNAME '[' expr ']' ':' pfld
  217     | PNAME '@' NAME
  218     | PNAME ':' pfld
  219     | ltl_expr

  220 Opt_priority: %empty
  221             | PRIORITY CONST

  222 full_expr: expr
  223          | Expr

  224 ltl_expr: expr UNTIL expr
  225         | expr RELEASE expr
  226         | expr WEAK_UNTIL expr
  227         | expr IMPLIES expr
  228         | expr EQUIV expr
  229         | NEXT expr
  230         | ALWAYS expr
  231         | EVENTUALLY expr

  232 Expr: Probe
  233     | l_par Expr r_par
  234     | Expr AND Expr
  235     | Expr AND expr
  236     | expr AND Expr
  237     | Expr OR Expr
  238     | Expr OR expr
  239     | expr OR Expr

  240 Probe: FULL l_par varref r_par
  241      | NFULL l_par varref r_par
  242      | EMPTY l_par varref r_par
  243      | NEMPTY l_par varref r_par

  244 Opt_enabler: %empty
  245            | PROVIDED l_par full_expr r_par
  246            | PROVIDED error

  247 basetype: TYPE
  248         | UNAME
  249         | error

  250 typ_list: basetype
  251         | basetype ',' typ_list

  252 two_args: expr ',' expr

  253 args: %empty
  254     | arg

  255 prargs: %empty
  256       | ',' arg

  257 margs: arg
  258      | expr l_par arg r_par

  259 arg: expr
  260    | expr ',' arg

  261 rarg: varref
  262     | EVAL l_par expr r_par
  263     | CONST
  264     | '-' CONST

  265 rargs: rarg
  266      | rarg ',' rargs
  267      | rarg l_par rargs r_par
  268      | l_par rargs r_par

  269 nlst: NAME
  270     | nlst NAME
  271     | nlst ','


Terminals, with rules where they appear

$end (0) 0
'%' (37) 176 182
'&' (38) 183
'(' (40) 15
')' (41) 16
'*' (42) 174 180
'+' (43) 172 178
',' (44) 81 83 85 251 252 256 260 266 271
'-' (45) 170 173 179 197 264
'.' (46) 101
'/' (47) 175 181
':' (58) 62 63 92 112 115 121 122 199 216 218
'@' (64) 215 217
'[' (91) 24 25 90 93 97 206 208 215 216
']' (93) 24 25 90 93 97 206 208 215 216
'^' (94) 184
'{' (123) 30 41 57 75 87 90 106 145 147 149
'|' (124) 185
'}' (125) 30 41 57 75 87 90 106 145 147 149
'~' (126) 196
error (256) 14 31 123 246 249
ASSERT (258) 132
PRINT (259) 129
PRINTM (260) 130 131
PREPROC (261)
C_CODE (262) 52
C_DECL (263) 53
C_EXPR (264) 54
C_STATE (265) 48 50
C_TRACK (266) 49 51
RUN (267) 201
LEN (268) 202
ENABLED (269) 203
SET_P (270) 127
GET_P (271) 204
EVAL (272) 262
PC_VAL (273) 214
TYPEDEF (274) 41
MTYPE (275)
INLINE (276) 45
RETURN (277) 156
LABEL (278)
OF (279) 90
GOTO (280) 120
BREAK (281) 119
ELSE (282) 143
SEMI (283) 77 163
ARROW (284) 164 199
IF (285) 116
FI (286) 116
DO (287) 118
OD (288) 118
FOR (289) 105
SELECT (290) 115
IN (291) 114
SEP (292) 160
DOTDOT (293) 112 115
ATOMIC (294) 145
NON_ATOMIC (295)
D_STEP (296) 147
UNLESS (297) 66
TIMEOUT (298) 212
NONPROGRESS (299) 213
ACTIVE (300) 23 24 25
PROCTYPE (301) 20
D_PROCTYPE (302) 21
HIDDEN (303) 68
SHOW (304) 69
ISLOCAL (305) 70
PRIORITY (306) 221
PROVIDED (307) 245 246
FULL (308) 240
EMPTY (309) 242
NFULL (310) 241
NEMPTY (311) 243
CONST (312) 84 85 92 131 169 211 221 263 264
TYPE (313) 73 75 247
XU (314) 61 63
NAME (315) 19 25 35 37 41 42 62 63 91 92 93 95 97 120 121 122 167 215
    217 269 270
UNAME (316) 74 248
PNAME (317) 168 215 216 217 218
INAME (318) 43 152 155
STRING (319) 48 49 50 51 129
CLAIM (320) 33
TRACE (321) 39
INIT (322) 27
LTL (323) 29
ASGN (324) 72 87 88 89 124 155
SND (325) 110 198
O_SND (326) 141
RCV (327) 108 137 206
R_RCV (328) 135 139 208
IMPLIES (329) 227
EQUIV (330) 228
OR (331) 193 237 238 239
AND (332) 192 234 235 236
ALWAYS (333) 230
EVENTUALLY (334) 231
UNTIL (335) 224
WEAK_UNTIL (336) 226
RELEASE (337) 225
NEXT (338) 229
EQ (339) 190
NE (340) 191
GT (341) 137 139 186
LT (342) 137 139 187
GE (343) 188
LE (344) 189
LSHIFT (345) 194
RSHIFT (346) 195
INCR (347) 125
DECR (348) 126
UMIN (349)
NEG (350)
DOT (351)


Nonterminals, with rules where they appear

$accept (116)
    on left: 0
program (117)
    on left: 1, on right: 0
units (118)
    on left: 2 3, on right: 1 3
unit (119)
    on left: 4 5 6 7 8 9 10 11 12 13 14, on right: 2 3
l_par (120)
    on left: 15, on right: 19 45 105 115 127 129 130 131 152 155 171
    177 199 201 202 203 204 214 233 240 241 242 243 245 258 262 267
    268
r_par (121)
    on left: 16, on right: 19 45 112 114 115 127 129 130 131 152 155
    171 177 199 201 202 203 204 214 233 240 241 242 243 245 258 262
    267 268
proc (122)
    on left: 19, on right: 4
$@1 (123)
    on left: 17, on right: 19
$@2 (124)
    on left: 18, on right: 19
proctype (125)
    on left: 20 21, on right: 19
inst (126)
    on left: 22 23 24 25, on right: 19
init (127)
    on left: 27, on right: 5
$@3 (128)
    on left: 26, on right: 27
ltl (129)
    on left: 29, on right: 7
$@4 (130)
    on left: 28, on right: 29
ltl_body (131)
    on left: 30 31, on right: 29
claim (132)
    on left: 33, on right: 6
$@5 (133)
    on left: 32, on right: 33
optname (134)
    on left: 34 35, on right: 33
optname2 (135)
    on left: 36 37, on right: 29
events (136)
    on left: 39, on right: 8
$@6 (137)
    on left: 38, on right: 39
utype (138)
    on left: 41, on right: 10
$@7 (139)
    on left: 40, on right: 41
nm (140)
    on left: 42 43, on right: 45
ns (141)
    on left: 45, on right: 12
$@8 (142)
    on left: 44, on right: 45
c_fcts (143)
    on left: 46 47, on right: 11
cstate (144)
    on left: 48 49 50 51, on right: 47
ccode (145)
    on left: 52 53, on right: 46 133
cexpr (146)
    on left: 54, on right: 210
body (147)
    on left: 57, on right: 19 27 33 39
$@9 (148)
    on left: 55, on right: 57
$@10 (149)
    on left: 56, on right: 57
sequence (150)
    on left: 58 59, on right: 57 59 106 145 147 149 160
step (151)
    on left: 60 61 62 63 64 66, on right: 58 59
$@11 (152)
    on left: 65, on right: 66
vis (153)
    on left: 67 68 69 70, on right: 73 74 75
asgn (154)
    on left: 71 72, on right: 75
one_decl (155)
    on left: 73 74 75, on right: 9 60 62 76 77
decl_lst (156)
    on left: 76 77, on right: 41 77 79
decl (157)
    on left: 78 79, on right: 19
vref_lst (158)
    on left: 80 81, on right: 61 81
var_list (159)
    on left: 82 83, on right: 73 74 83
c_list (160)
    on left: 84 85, on right: 85 87
ivar (161)
    on left: 86 87 88 89, on right: 82 83
ch_init (162)
    on left: 90, on right: 89
vardcl (163)
    on left: 91 92 93, on right: 86 87 88 89
varref (164)
    on left: 94, on right: 80 81 105 108 110 114 115 124 125 126 130
    135 137 139 141 155 202 206 208 209 240 241 242 243 261
pfld (165)
    on left: 95 97, on right: 99 216 218
$@12 (166)
    on left: 96, on right: 97
cmpnd (167)
    on left: 99, on right: 94 101
$@13 (168)
    on left: 98, on right: 99
sfld (169)
    on left: 100 101, on right: 99
stmnt (170)
    on left: 102 103, on right: 64 66 121
for_pre (171)
    on left: 105, on right: 112 114
$@14 (172)
    on left: 104, on right: 105
for_post (173)
    on left: 106, on right: 112 114
Special (174)
    on left: 108 110 112 114 115 116 118 119 120 121 122 123, on right:
    102
$@15 (175)
    on left: 107, on right: 108
$@16 (176)
    on left: 109, on right: 110
$@17 (177)
    on left: 111, on right: 112
@18 (178)
    on left: 113, on right: 114
$@19 (179)
    on left: 117, on right: 118
Stmnt (180)
    on left: 124 125 126 127 129 130 131 132 133 135 137 139 141 142
    143 145 147 149 152 155 156, on right: 103 152 155
$@20 (181)
    on left: 128, on right: 129
$@21 (182)
    on left: 134, on right: 135
$@22 (183)
    on left: 136, on right: 137
$@23 (184)
    on left: 138, on right: 139
$@24 (185)
    on left: 140, on right: 141
$@25 (186)
    on left: 144, on right: 145
$@26 (187)
    on left: 146, on right: 147
$@27 (188)
    on left: 148, on right: 149
$@28 (189)
    on left: 150, on right: 152
$@29 (190)
    on left: 151, on right: 152
$@30 (191)
    on left: 153, on right: 155
$@31 (192)
    on left: 154, on right: 155
options (193)
    on left: 157 158, on right: 116 118 158
option (194)
    on left: 160, on right: 157 158
$@32 (195)
    on left: 159, on right: 160
OS (196)
    on left: 161 162, on right: 30 57 106 145 147 149 160
semi (197)
    on left: 163 164, on right: 13 162 165 166
MS (198)
    on left: 165 166, on right: 59 166
aname (199)
    on left: 167 168, on right: 201
const_expr (200)
    on left: 169 170 171 172 173 174 175 176, on right: 24 90 93 170
    171 172 173 174 175 176
expr (201)
    on left: 177 178 179 180 181 182 183 184 185 186 187 188 189 190
    191 192 193 194 195 196 197 198 199 201 202 203 204 206 208 209
    210 211 212 213 214 215 216 217 218 219, on right: 88 97 112 115
    177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192
    193 194 195 196 197 198 199 203 204 214 215 216 222 224 225 226
    227 228 229 230 231 235 236 238 239 252 258 259 260 262
$@33 (202)
    on left: 200, on right: 201
$@34 (203)
    on left: 205, on right: 206
$@35 (204)
    on left: 207, on right: 208
Opt_priority (205)
    on left: 220 221, on right: 19 27 201
full_expr (206)
    on left: 222 223, on right: 30 124 132 142 156 245
ltl_expr (207)
    on left: 224 225 226 227 228 229 230 231, on right: 219
Expr (208)
    on left: 232 233 234 235 236 237 238 239, on right: 223 233 234
    235 236 237 238 239
Probe (209)
    on left: 240 241 242 243, on right: 232
Opt_enabler (210)
    on left: 244 245 246, on right: 19
basetype (211)
    on left: 247 248 249, on right: 250 251
typ_list (212)
    on left: 250 251, on right: 90 251
two_args (213)
    on left: 252, on right: 127
args (214)
    on left: 253 254, on right: 45 152 155 201
prargs (215)
    on left: 255 256, on right: 129
margs (216)
    on left: 257 258, on right: 110 141
arg (217)
    on left: 259 260, on right: 254 256 257 258 260
rarg (218)
    on left: 261 262 263 264, on right: 265 266 267
rargs (219)
    on left: 265 266 267 268, on right: 108 135 137 139 206 208 266
    267 268
nlst (220)
    on left: 269 270 271, on right: 75 270 271


State 0

    0 $accept: . program $end

    error    shift, and go to state 1
    C_CODE   shift, and go to state 2
    C_DECL   shift, and go to state 3
    C_STATE  shift, and go to state 4
    C_TRACK  shift, and go to state 5
    TYPEDEF  shift, and go to state 6
    INLINE   shift, and go to state 7
    SEMI     shift, and go to state 8
    ARROW    shift, and go to state 9
    ACTIVE   shift, and go to state 10
    HIDDEN   shift, and go to state 11
    SHOW     shift, and go to state 12
    ISLOCAL  shift, and go to state 13
    CLAIM    shift, and go to state 14
    TRACE    shift, and go to state 15
    INIT     shift, and go to state 16
    LTL      shift, and go to state 17

    PROCTYPE    reduce using rule 22 (inst)
    D_PROCTYPE  reduce using rule 22 (inst)
    TYPE        reduce using rule 67 (vis)
    UNAME       reduce using rule 67 (vis)

    program   go to state 18
    units     go to state 19
    unit      go to state 20
    proc      go to state 21
    inst      go to state 22
    init      go to state 23
    ltl       go to state 24
    claim     go to state 25
    events    go to state 26
    utype     go to state 27
    ns        go to state 28
    c_fcts    go to state 29
    cstate    go to state 30
    ccode     go to state 31
    vis       go to state 32
    one_decl  go to state 33
    semi      go to state 34


State 1

   14 unit: error .

    $default  reduce using rule 14 (unit)


State 2

   52 ccode: C_CODE .

    $default  reduce using rule 52 (ccode)


State 3

   53 ccode: C_DECL .

    $default  reduce using rule 53 (ccode)


State 4

   48 cstate: C_STATE . STRING STRING
   50       | C_STATE . STRING STRING STRING

    STRING  shift, and go to state 35


State 5

   49 cstate: C_TRACK . STRING STRING
   51       | C_TRACK . STRING STRING STRING

    STRING  shift, and go to state 36


State 6

   41 utype: TYPEDEF . NAME $@7 '{' decl_lst '}'

    NAME  shift, and go to state 37


State 7

   45 ns: INLINE . nm l_par $@8 args r_par

    NAME   shift, and go to state 38
    INAME  shift, and go to state 39

    nm  go to state 40


State 8

  163 semi: SEMI .

    $default  reduce using rule 163 (semi)


State 9

  164 semi: ARROW .

    $default  reduce using rule 164 (semi)


State 10

   23 inst: ACTIVE .
   24     | ACTIVE . '[' const_expr ']'
   25     | ACTIVE . '[' NAME ']'

    '['  shift, and go to state 41

    $default  reduce using rule 23 (inst)


State 11

   68 vis: HIDDEN .

    $default  reduce using rule 68 (vis)


State 12

   69 vis: SHOW .

    $default  reduce using rule 69 (vis)


State 13

   70 vis: ISLOCAL .

    $default  reduce using rule 70 (vis)


State 14

   33 claim: CLAIM . optname $@5 body

    NAME  shift, and go to state 42

    $default  reduce using rule 34 (optname)

    optname  go to state 43


State 15

   39 events: TRACE . $@6 body

    $default  reduce using rule 38 ($@6)

    $@6  go to state 44


State 16

   27 init: INIT . $@3 Opt_priority body

    $default  reduce using rule 26 ($@3)

    $@3  go to state 45


State 17

   29 ltl: LTL . optname2 $@4 ltl_body

    NAME  shift, and go to state 46

    $default  reduce using rule 36 (optname2)

    optname2  go to state 47


State 18

    0 $accept: program . $end

    $end  shift, and go to state 48


State 19

    1 program: units .
    3 units: units . unit

    error    shift, and go to state 1
    C_CODE   shift, and go to state 2
    C_DECL   shift, and go to state 3
    C_STATE  shift, and go to state 4
    C_TRACK  shift, and go to state 5
    TYPEDEF  shift, and go to state 6
    INLINE   shift, and go to state 7
    SEMI     shift, and go to state 8
    ARROW    shift, and go to state 9
    ACTIVE   shift, and go to state 10
    HIDDEN   shift, and go to state 11
    SHOW     shift, and go to state 12
    ISLOCAL  shift, and go to state 13
    CLAIM    shift, and go to state 14
    TRACE    shift, and go to state 15
    INIT     shift, and go to state 16
    LTL      shift, and go to state 17

    $end        reduce using rule 1 (program)
    PROCTYPE    reduce using rule 22 (inst)
    D_PROCTYPE  reduce using rule 22 (inst)
    TYPE        reduce using rule 67 (vis)
    UNAME       reduce using rule 67 (vis)

    unit      go to state 49
    proc      go to state 21
    inst      go to state 22
    init      go to state 23
    ltl       go to state 24
    claim     go to state 25
    events    go to state 26
    utype     go to state 27
    ns        go to state 28
    c_fcts    go to state 29
    cstate    go to state 30
    ccode     go to state 31
    vis       go to state 32
    one_decl  go to state 33
    semi      go to state 34


State 20

    2 units: unit .

    $default  reduce using rule 2 (units)


State 21

    4 unit: proc .

    $default  reduce using rule 4 (unit)


State 22

   19 proc: inst . proctype NAME $@1 l_par decl r_par $@2 Opt_priority Opt_enabler body

    PROCTYPE    shift, and go to state 50
    D_PROCTYPE  shift, and go to state 51

    proctype  go to state 52


State 23

    5 unit: init .

    $default  reduce using rule 5 (unit)


State 24

    7 unit: ltl .

    $default  reduce using rule 7 (unit)


State 25

    6 unit: claim .

    $default  reduce using rule 6 (unit)


State 26

    8 unit: events .

    $default  reduce using rule 8 (unit)


State 27

   10 unit: utype .

    $default  reduce using rule 10 (unit)


State 28

   12 unit: ns .

    $default  reduce using rule 12 (unit)


State 29

   11 unit: c_fcts .

    $default  reduce using rule 11 (unit)


State 30

   47 c_fcts: cstate .

    $default  reduce using rule 47 (c_fcts)


State 31

   46 c_fcts: ccode .

    $default  reduce using rule 46 (c_fcts)


State 32

   73 one_decl: vis . TYPE var_list
   74         | vis . UNAME var_list
   75         | vis . TYPE asgn '{' nlst '}'

    TYPE   shift, and go to state 53
    UNAME  shift, and go to state 54


State 33

    9 unit: one_decl .

    $default  reduce using rule 9 (unit)


State 34

   13 unit: semi .

    $default  reduce using rule 13 (unit)


State 35

   48 cstate: C_STATE STRING . STRING
   50       | C_STATE STRING . STRING STRING

    STRING  shift, and go to state 55


State 36

   49 cstate: C_TRACK STRING . STRING
   51       | C_TRACK STRING . STRING STRING

    STRING  shift, and go to state 56


State 37

   41 utype: TYPEDEF NAME . $@7 '{' decl_lst '}'

    $default  reduce using rule 40 ($@7)

    $@7  go to state 57


State 38

   42 nm: NAME .

    $default  reduce using rule 42 (nm)


State 39

   43 nm: INAME .

    $default  reduce using rule 43 (nm)


State 40

   45 ns: INLINE nm . l_par $@8 args r_par

    '('  shift, and go to state 58

    l_par  go to state 59


State 41

   24 inst: ACTIVE '[' . const_expr ']'
   25     | ACTIVE '[' . NAME ']'

    CONST  shift, and go to state 60
    NAME   shift, and go to state 61
    '-'    shift, and go to state 62
    '('    shift, and go to state 58

    l_par       go to state 63
    const_expr  go to state 64


State 42

   35 optname: NAME .

    $default  reduce using rule 35 (optname)


State 43

   33 claim: CLAIM optname . $@5 body

    $default  reduce using rule 32 ($@5)

    $@5  go to state 65


State 44

   39 events: TRACE $@6 . body

    '{'  shift, and go to state 66

    body  go to state 67


State 45

   27 init: INIT $@3 . Opt_priority body

    PRIORITY  shift, and go to state 68

    $default  reduce using rule 220 (Opt_priority)

    Opt_priority  go to state 69


State 46

   37 optname2: NAME .

    $default  reduce using rule 37 (optname2)


State 47

   29 ltl: LTL optname2 . $@4 ltl_body

    $default  reduce using rule 28 ($@4)

    $@4  go to state 70


State 48

    0 $accept: program $end .

    $default  accept


State 49

    3 units: units unit .

    $default  reduce using rule 3 (units)


State 50

   20 proctype: PROCTYPE .

    $default  reduce using rule 20 (proctype)


State 51

   21 proctype: D_PROCTYPE .

    $default  reduce using rule 21 (proctype)


State 52

   19 proc: inst proctype . NAME $@1 l_par decl r_par $@2 Opt_priority Opt_enabler body

    NAME  shift, and go to state 71


State 53

   73 one_decl: vis TYPE . var_list
   75         | vis TYPE . asgn '{' nlst '}'

    NAME  shift, and go to state 72
    ASGN  shift, and go to state 73

    $default  reduce using rule 71 (asgn)

    asgn      go to state 74
    var_list  go to state 75
    ivar      go to state 76
    vardcl    go to state 77


State 54

   74 one_decl: vis UNAME . var_list

    NAME  shift, and go to state 72

    var_list  go to state 78
    ivar      go to state 76
    vardcl    go to state 77


State 55

   48 cstate: C_STATE STRING STRING .
   50       | C_STATE STRING STRING . STRING

    STRING  shift, and go to state 79

    $default  reduce using rule 48 (cstate)


State 56

   49 cstate: C_TRACK STRING STRING .
   51       | C_TRACK STRING STRING . STRING

    STRING  shift, and go to state 80

    $default  reduce using rule 49 (cstate)


State 57

   41 utype: TYPEDEF NAME $@7 . '{' decl_lst '}'

    '{'  shift, and go to state 81


State 58

   15 l_par: '(' .

    $default  reduce using rule 15 (l_par)


State 59

   45 ns: INLINE nm l_par . $@8 args r_par

    $default  reduce using rule 44 ($@8)

    $@8  go to state 82


State 60

  169 const_expr: CONST .

    $default  reduce using rule 169 (const_expr)


State 61

   25 inst: ACTIVE '[' NAME . ']'

    ']'  shift, and go to state 83


State 62

  170 const_expr: '-' . const_expr

    CONST  shift, and go to state 60
    '-'    shift, and go to state 62
    '('    shift, and go to state 58

    l_par       go to state 63
    const_expr  go to state 84


State 63

  171 const_expr: l_par . const_expr r_par

    CONST  shift, and go to state 60
    '-'    shift, and go to state 62
    '('    shift, and go to state 58

    l_par       go to state 63
    const_expr  go to state 85


State 64

   24 inst: ACTIVE '[' const_expr . ']'
  172 const_expr: const_expr . '+' const_expr
  173           | const_expr . '-' const_expr
  174           | const_expr . '*' const_expr
  175           | const_expr . '/' const_expr
  176           | const_expr . '%' const_expr

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90
    ']'  shift, and go to state 91


State 65

   33 claim: CLAIM optname $@5 . body

    '{'  shift, and go to state 66

    body  go to state 92


State 66

   57 body: '{' . $@9 sequence OS $@10 '}'

    $default  reduce using rule 55 ($@9)

    $@9  go to state 93


State 67

   39 events: TRACE $@6 body .

    $default  reduce using rule 39 (events)


State 68

  221 Opt_priority: PRIORITY . CONST

    CONST  shift, and go to state 94


State 69

   27 init: INIT $@3 Opt_priority . body

    '{'  shift, and go to state 66

    body  go to state 95


State 70

   29 ltl: LTL optname2 $@4 . ltl_body

    error  shift, and go to state 96
    '{'    shift, and go to state 97

    ltl_body  go to state 98


State 71

   19 proc: inst proctype NAME . $@1 l_par decl r_par $@2 Opt_priority Opt_enabler body

    $default  reduce using rule 17 ($@1)

    $@1  go to state 99


State 72

   91 vardcl: NAME .
   92       | NAME . ':' CONST
   93       | NAME . '[' const_expr ']'

    '['  shift, and go to state 100
    ':'  shift, and go to state 101

    $default  reduce using rule 91 (vardcl)


State 73

   72 asgn: ASGN .

    $default  reduce using rule 72 (asgn)


State 74

   75 one_decl: vis TYPE asgn . '{' nlst '}'

    '{'  shift, and go to state 102


State 75

   73 one_decl: vis TYPE var_list .

    $default  reduce using rule 73 (one_decl)


State 76

   82 var_list: ivar .
   83         | ivar . ',' var_list

    ','  shift, and go to state 103

    $default  reduce using rule 82 (var_list)


State 77

   86 ivar: vardcl .
   87     | vardcl . ASGN '{' c_list '}'
   88     | vardcl . ASGN expr
   89     | vardcl . ASGN ch_init

    ASGN  shift, and go to state 104

    $default  reduce using rule 86 (ivar)


State 78

   74 one_decl: vis UNAME var_list .

    $default  reduce using rule 74 (one_decl)


State 79

   50 cstate: C_STATE STRING STRING STRING .

    $default  reduce using rule 50 (cstate)


State 80

   51 cstate: C_TRACK STRING STRING STRING .

    $default  reduce using rule 51 (cstate)


State 81

   41 utype: TYPEDEF NAME $@7 '{' . decl_lst '}'

    HIDDEN   shift, and go to state 11
    SHOW     shift, and go to state 12
    ISLOCAL  shift, and go to state 13

    $default  reduce using rule 67 (vis)

    vis       go to state 32
    one_decl  go to state 105
    decl_lst  go to state 106


State 82

   45 ns: INLINE nm l_par $@8 . args r_par

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    $default  reduce using rule 253 (args)

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 129
    ltl_expr  go to state 130
    args      go to state 131
    arg       go to state 132


State 83

   25 inst: ACTIVE '[' NAME ']' .

    $default  reduce using rule 25 (inst)


State 84

  170 const_expr: '-' const_expr .
  172           | const_expr . '+' const_expr
  173           | const_expr . '-' const_expr
  174           | const_expr . '*' const_expr
  175           | const_expr . '/' const_expr
  176           | const_expr . '%' const_expr

    $default  reduce using rule 170 (const_expr)


State 85

  171 const_expr: l_par const_expr . r_par
  172           | const_expr . '+' const_expr
  173           | const_expr . '-' const_expr
  174           | const_expr . '*' const_expr
  175           | const_expr . '/' const_expr
  176           | const_expr . '%' const_expr

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90
    ')'  shift, and go to state 133

    r_par  go to state 134


State 86

  172 const_expr: const_expr '+' . const_expr

    CONST  shift, and go to state 60
    '-'    shift, and go to state 62
    '('    shift, and go to state 58

    l_par       go to state 63
    const_expr  go to state 135


State 87

  173 const_expr: const_expr '-' . const_expr

    CONST  shift, and go to state 60
    '-'    shift, and go to state 62
    '('    shift, and go to state 58

    l_par       go to state 63
    const_expr  go to state 136


State 88

  174 const_expr: const_expr '*' . const_expr

    CONST  shift, and go to state 60
    '-'    shift, and go to state 62
    '('    shift, and go to state 58

    l_par       go to state 63
    const_expr  go to state 137


State 89

  175 const_expr: const_expr '/' . const_expr

    CONST  shift, and go to state 60
    '-'    shift, and go to state 62
    '('    shift, and go to state 58

    l_par       go to state 63
    const_expr  go to state 138


State 90

  176 const_expr: const_expr '%' . const_expr

    CONST  shift, and go to state 60
    '-'    shift, and go to state 62
    '('    shift, and go to state 58

    l_par       go to state 63
    const_expr  go to state 139


State 91

   24 inst: ACTIVE '[' const_expr ']' .

    $default  reduce using rule 24 (inst)


State 92

   33 claim: CLAIM optname $@5 body .

    $default  reduce using rule 33 (claim)


State 93

   57 body: '{' $@9 . sequence OS $@10 '}'

    error        shift, and go to state 140
    ASSERT       shift, and go to state 141
    PRINT        shift, and go to state 142
    PRINTM       shift, and go to state 143
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    SET_P        shift, and go to state 144
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    RETURN       shift, and go to state 145
    GOTO         shift, and go to state 146
    BREAK        shift, and go to state 147
    ELSE         shift, and go to state 148
    IF           shift, and go to state 149
    DO           shift, and go to state 150
    FOR          shift, and go to state 151
    SELECT       shift, and go to state 152
    ATOMIC       shift, and go to state 153
    D_STEP       shift, and go to state 154
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    HIDDEN       shift, and go to state 11
    SHOW         shift, and go to state 12
    ISLOCAL      shift, and go to state 13
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    XU           shift, and go to state 159
    NAME         shift, and go to state 160
    PNAME        shift, and go to state 117
    INAME        shift, and go to state 161
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58
    '{'          shift, and go to state 162

    TYPE   reduce using rule 67 (vis)
    UNAME  reduce using rule 67 (vis)

    l_par      go to state 163
    ccode      go to state 164
    cexpr      go to state 125
    sequence   go to state 165
    step       go to state 166
    vis        go to state 32
    one_decl   go to state 167
    varref     go to state 168
    pfld       go to state 127
    cmpnd      go to state 128
    stmnt      go to state 169
    for_pre    go to state 170
    Special    go to state 171
    Stmnt      go to state 172
    expr       go to state 173
    full_expr  go to state 174
    ltl_expr   go to state 130
    Expr       go to state 175
    Probe      go to state 176


State 94

  221 Opt_priority: PRIORITY CONST .

    $default  reduce using rule 221 (Opt_priority)


State 95

   27 init: INIT $@3 Opt_priority body .

    $default  reduce using rule 27 (init)


State 96

   31 ltl_body: error .

    $default  reduce using rule 31 (ltl_body)


State 97

   30 ltl_body: '{' . full_expr OS '}'

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par      go to state 163
    cexpr      go to state 125
    varref     go to state 126
    pfld       go to state 127
    cmpnd      go to state 128
    expr       go to state 173
    full_expr  go to state 177
    ltl_expr   go to state 130
    Expr       go to state 175
    Probe      go to state 176


State 98

   29 ltl: LTL optname2 $@4 ltl_body .

    $default  reduce using rule 29 (ltl)


State 99

   19 proc: inst proctype NAME $@1 . l_par decl r_par $@2 Opt_priority Opt_enabler body

    '('  shift, and go to state 58

    l_par  go to state 178


State 100

   93 vardcl: NAME '[' . const_expr ']'

    CONST  shift, and go to state 60
    '-'    shift, and go to state 62
    '('    shift, and go to state 58

    l_par       go to state 63
    const_expr  go to state 179


State 101

   92 vardcl: NAME ':' . CONST

    CONST  shift, and go to state 180


State 102

   75 one_decl: vis TYPE asgn '{' . nlst '}'

    NAME  shift, and go to state 181

    nlst  go to state 182


State 103

   83 var_list: ivar ',' . var_list

    NAME  shift, and go to state 72

    var_list  go to state 183
    ivar      go to state 76
    vardcl    go to state 77


State 104

   87 ivar: vardcl ASGN . '{' c_list '}'
   88     | vardcl ASGN . expr
   89     | vardcl ASGN . ch_init

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58
    '['          shift, and go to state 184
    '{'          shift, and go to state 185

    l_par     go to state 124
    cexpr     go to state 125
    ch_init   go to state 186
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 187
    ltl_expr  go to state 130


State 105

   76 decl_lst: one_decl .
   77         | one_decl . SEMI decl_lst

    SEMI  shift, and go to state 188

    $default  reduce using rule 76 (decl_lst)


State 106

   41 utype: TYPEDEF NAME $@7 '{' decl_lst . '}'

    '}'  shift, and go to state 189


State 107

   54 cexpr: C_EXPR .

    $default  reduce using rule 54 (cexpr)


State 108

  201 expr: RUN . aname $@33 l_par args r_par Opt_priority

    NAME   shift, and go to state 190
    PNAME  shift, and go to state 191

    aname  go to state 192


State 109

  202 expr: LEN . l_par varref r_par

    '('  shift, and go to state 58

    l_par  go to state 193


State 110

  203 expr: ENABLED . l_par expr r_par

    '('  shift, and go to state 58

    l_par  go to state 194


State 111

  204 expr: GET_P . l_par expr r_par

    '('  shift, and go to state 58

    l_par  go to state 195


State 112

  214 expr: PC_VAL . l_par expr r_par

    '('  shift, and go to state 58

    l_par  go to state 196


State 113

  212 expr: TIMEOUT .

    $default  reduce using rule 212 (expr)


State 114

  213 expr: NONPROGRESS .

    $default  reduce using rule 213 (expr)


State 115

  211 expr: CONST .

    $default  reduce using rule 211 (expr)


State 116

   95 pfld: NAME .
   97     | NAME . $@12 '[' expr ']'

    '['       reduce using rule 96 ($@12)
    $default  reduce using rule 95 (pfld)

    $@12  go to state 197


State 117

  215 expr: PNAME . '[' expr ']' '@' NAME
  216     | PNAME . '[' expr ']' ':' pfld
  217     | PNAME . '@' NAME
  218     | PNAME . ':' pfld

    '['  shift, and go to state 198
    ':'  shift, and go to state 199
    '@'  shift, and go to state 200


State 118

  198 expr: SND . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 201
    ltl_expr  go to state 130


State 119

  230 ltl_expr: ALWAYS . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 202
    ltl_expr  go to state 130


State 120

  231 ltl_expr: EVENTUALLY . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 203
    ltl_expr  go to state 130


State 121

  229 ltl_expr: NEXT . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 204
    ltl_expr  go to state 130


State 122

  197 expr: '-' . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 205
    ltl_expr  go to state 130


State 123

  196 expr: '~' . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 206
    ltl_expr  go to state 130


State 124

  177 expr: l_par . expr r_par
  199     | l_par . expr ARROW expr ':' expr r_par

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 207
    ltl_expr  go to state 130


State 125

  210 expr: cexpr .

    $default  reduce using rule 210 (expr)


State 126

  206 expr: varref . RCV $@34 '[' rargs ']'
  208     | varref . R_RCV $@35 '[' rargs ']'
  209     | varref .

    RCV    shift, and go to state 208
    R_RCV  shift, and go to state 209

    $default  reduce using rule 209 (expr)


State 127

   99 cmpnd: pfld . $@13 sfld

    $default  reduce using rule 98 ($@13)

    $@13  go to state 210


State 128

   94 varref: cmpnd .

    $default  reduce using rule 94 (varref)


State 129

  178 expr: expr . '+' expr
  179     | expr . '-' expr
  180     | expr . '*' expr
  181     | expr . '/' expr
  182     | expr . '%' expr
  183     | expr . '&' expr
  184     | expr . '^' expr
  185     | expr . '|' expr
  186     | expr . GT expr
  187     | expr . LT expr
  188     | expr . GE expr
  189     | expr . LE expr
  190     | expr . EQ expr
  191     | expr . NE expr
  192     | expr . AND expr
  193     | expr . OR expr
  194     | expr . LSHIFT expr
  195     | expr . RSHIFT expr
  224 ltl_expr: expr . UNTIL expr
  225         | expr . RELEASE expr
  226         | expr . WEAK_UNTIL expr
  227         | expr . IMPLIES expr
  228         | expr . EQUIV expr
  259 arg: expr .
  260    | expr . ',' arg

    IMPLIES     shift, and go to state 211
    EQUIV       shift, and go to state 212
    OR          shift, and go to state 213
    AND         shift, and go to state 214
    UNTIL       shift, and go to state 215
    WEAK_UNTIL  shift, and go to state 216
    RELEASE     shift, and go to state 217
    '|'         shift, and go to state 218
    '^'         shift, and go to state 219
    '&'         shift, and go to state 220
    EQ          shift, and go to state 221
    NE          shift, and go to state 222
    GT          shift, and go to state 223
    LT          shift, and go to state 224
    GE          shift, and go to state 225
    LE          shift, and go to state 226
    LSHIFT      shift, and go to state 227
    RSHIFT      shift, and go to state 228
    '+'         shift, and go to state 229
    '-'         shift, and go to state 230
    '*'         shift, and go to state 231
    '/'         shift, and go to state 232
    '%'         shift, and go to state 233
    ','         shift, and go to state 234

    $default  reduce using rule 259 (arg)


State 130

  219 expr: ltl_expr .

    $default  reduce using rule 219 (expr)


State 131

   45 ns: INLINE nm l_par $@8 args . r_par

    ')'  shift, and go to state 133

    r_par  go to state 235


State 132

  254 args: arg .

    $default  reduce using rule 254 (args)


State 133

   16 r_par: ')' .

    $default  reduce using rule 16 (r_par)


State 134

  171 const_expr: l_par const_expr r_par .

    $default  reduce using rule 171 (const_expr)


State 135

  172 const_expr: const_expr . '+' const_expr
  172           | const_expr '+' const_expr .
  173           | const_expr . '-' const_expr
  174           | const_expr . '*' const_expr
  175           | const_expr . '/' const_expr
  176           | const_expr . '%' const_expr

    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90

    $default  reduce using rule 172 (const_expr)


State 136

  172 const_expr: const_expr . '+' const_expr
  173           | const_expr . '-' const_expr
  173           | const_expr '-' const_expr .
  174           | const_expr . '*' const_expr
  175           | const_expr . '/' const_expr
  176           | const_expr . '%' const_expr

    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90

    $default  reduce using rule 173 (const_expr)


State 137

  172 const_expr: const_expr . '+' const_expr
  173           | const_expr . '-' const_expr
  174           | const_expr . '*' const_expr
  174           | const_expr '*' const_expr .
  175           | const_expr . '/' const_expr
  176           | const_expr . '%' const_expr

    $default  reduce using rule 174 (const_expr)


State 138

  172 const_expr: const_expr . '+' const_expr
  173           | const_expr . '-' const_expr
  174           | const_expr . '*' const_expr
  175           | const_expr . '/' const_expr
  175           | const_expr '/' const_expr .
  176           | const_expr . '%' const_expr

    $default  reduce using rule 175 (const_expr)


State 139

  172 const_expr: const_expr . '+' const_expr
  173           | const_expr . '-' const_expr
  174           | const_expr . '*' const_expr
  175           | const_expr . '/' const_expr
  176           | const_expr . '%' const_expr
  176           | const_expr '%' const_expr .

    $default  reduce using rule 176 (const_expr)


State 140

  123 Special: error .

    $default  reduce using rule 123 (Special)


State 141

  132 Stmnt: ASSERT . full_expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par      go to state 163
    cexpr      go to state 125
    varref     go to state 126
    pfld       go to state 127
    cmpnd      go to state 128
    expr       go to state 173
    full_expr  go to state 236
    ltl_expr   go to state 130
    Expr       go to state 175
    Probe      go to state 176


State 142

  129 Stmnt: PRINT . l_par STRING $@20 prargs r_par

    '('  shift, and go to state 58

    l_par  go to state 237


State 143

  130 Stmnt: PRINTM . l_par varref r_par
  131      | PRINTM . l_par CONST r_par

    '('  shift, and go to state 58

    l_par  go to state 238


State 144

  127 Stmnt: SET_P . l_par two_args r_par

    '('  shift, and go to state 58

    l_par  go to state 239


State 145

  156 Stmnt: RETURN . full_expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par      go to state 163
    cexpr      go to state 125
    varref     go to state 126
    pfld       go to state 127
    cmpnd      go to state 128
    expr       go to state 173
    full_expr  go to state 240
    ltl_expr   go to state 130
    Expr       go to state 175
    Probe      go to state 176


State 146

  120 Special: GOTO . NAME

    NAME  shift, and go to state 241


State 147

  119 Special: BREAK .

    $default  reduce using rule 119 (Special)


State 148

  143 Stmnt: ELSE .

    $default  reduce using rule 143 (Stmnt)


State 149

  116 Special: IF . options FI

    SEP  shift, and go to state 242

    options  go to state 243
    option   go to state 244


State 150

  118 Special: DO . $@19 options OD

    $default  reduce using rule 117 ($@19)

    $@19  go to state 245


State 151

  105 for_pre: FOR . l_par $@14 varref

    '('  shift, and go to state 58

    l_par  go to state 246


State 152

  115 Special: SELECT . l_par varref ':' expr DOTDOT expr r_par

    '('  shift, and go to state 58

    l_par  go to state 247


State 153

  145 Stmnt: ATOMIC . '{' $@25 sequence OS '}'

    '{'  shift, and go to state 248


State 154

  147 Stmnt: D_STEP . '{' $@26 sequence OS '}'

    '{'  shift, and go to state 249


State 155

  240 Probe: FULL . l_par varref r_par

    '('  shift, and go to state 58

    l_par  go to state 250


State 156

  242 Probe: EMPTY . l_par varref r_par

    '('  shift, and go to state 58

    l_par  go to state 251


State 157

  241 Probe: NFULL . l_par varref r_par

    '('  shift, and go to state 58

    l_par  go to state 252


State 158

  243 Probe: NEMPTY . l_par varref r_par

    '('  shift, and go to state 58

    l_par  go to state 253


State 159

   61 step: XU . vref_lst

    NAME  shift, and go to state 116

    vref_lst  go to state 254
    varref    go to state 255
    pfld      go to state 127
    cmpnd     go to state 128


State 160

   62 step: NAME . ':' one_decl
   63     | NAME . ':' XU
   95 pfld: NAME .
   97     | NAME . $@12 '[' expr ']'
  121 Special: NAME . ':' stmnt
  122        | NAME . ':'

    ':'  shift, and go to state 256

    '['       reduce using rule 96 ($@12)
    $default  reduce using rule 95 (pfld)

    $@12  go to state 197


State 161

  152 Stmnt: INAME . $@28 l_par args r_par $@29 Stmnt

    $default  reduce using rule 150 ($@28)

    $@28  go to state 257


State 162

  149 Stmnt: '{' . $@27 sequence OS '}'

    $default  reduce using rule 148 ($@27)

    $@27  go to state 258


State 163

  177 expr: l_par . expr r_par
  199     | l_par . expr ARROW expr ':' expr r_par
  233 Expr: l_par . Expr r_par

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 163
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 259
    ltl_expr  go to state 130
    Expr      go to state 260
    Probe     go to state 176


State 164

  133 Stmnt: ccode .

    $default  reduce using rule 133 (Stmnt)


State 165

   57 body: '{' $@9 sequence . OS $@10 '}'
   59 sequence: sequence . MS step

    SEMI   shift, and go to state 8
    ARROW  shift, and go to state 9

    $default  reduce using rule 161 (OS)

    OS    go to state 261
    semi  go to state 262
    MS    go to state 263


State 166

   58 sequence: step .

    $default  reduce using rule 58 (sequence)


State 167

   60 step: one_decl .

    $default  reduce using rule 60 (step)


State 168

  108 Special: varref . RCV $@15 rargs
  110        | varref . SND $@16 margs
  124 Stmnt: varref . ASGN full_expr
  125      | varref . INCR
  126      | varref . DECR
  135      | varref . R_RCV $@21 rargs
  137      | varref . RCV $@22 LT rargs GT
  139      | varref . R_RCV $@23 LT rargs GT
  141      | varref . O_SND $@24 margs
  155      | varref . ASGN INAME $@30 l_par args r_par $@31 Stmnt
  206 expr: varref . RCV $@34 '[' rargs ']'
  208     | varref . R_RCV $@35 '[' rargs ']'
  209     | varref .

    ASGN   shift, and go to state 264
    SND    shift, and go to state 265
    O_SND  shift, and go to state 266
    RCV    shift, and go to state 267
    R_RCV  shift, and go to state 268
    INCR   shift, and go to state 269
    DECR   shift, and go to state 270

    $default  reduce using rule 209 (expr)


State 169

   64 step: stmnt .
   66     | stmnt . UNLESS $@11 stmnt

    UNLESS  shift, and go to state 271

    $default  reduce using rule 64 (step)


State 170

  112 Special: for_pre . ':' expr DOTDOT expr r_par $@17 for_post
  114        | for_pre . IN varref r_par @18 for_post

    IN   shift, and go to state 272
    ':'  shift, and go to state 273


State 171

  102 stmnt: Special .

    $default  reduce using rule 102 (stmnt)


State 172

  103 stmnt: Stmnt .

    $default  reduce using rule 103 (stmnt)


State 173

  178 expr: expr . '+' expr
  179     | expr . '-' expr
  180     | expr . '*' expr
  181     | expr . '/' expr
  182     | expr . '%' expr
  183     | expr . '&' expr
  184     | expr . '^' expr
  185     | expr . '|' expr
  186     | expr . GT expr
  187     | expr . LT expr
  188     | expr . GE expr
  189     | expr . LE expr
  190     | expr . EQ expr
  191     | expr . NE expr
  192     | expr . AND expr
  193     | expr . OR expr
  194     | expr . LSHIFT expr
  195     | expr . RSHIFT expr
  222 full_expr: expr .
  224 ltl_expr: expr . UNTIL expr
  225         | expr . RELEASE expr
  226         | expr . WEAK_UNTIL expr
  227         | expr . IMPLIES expr
  228         | expr . EQUIV expr
  236 Expr: expr . AND Expr
  239     | expr . OR Expr

    IMPLIES     shift, and go to state 211
    EQUIV       shift, and go to state 212
    OR          shift, and go to state 274
    AND         shift, and go to state 275
    UNTIL       shift, and go to state 215
    WEAK_UNTIL  shift, and go to state 216
    RELEASE     shift, and go to state 217
    '|'         shift, and go to state 218
    '^'         shift, and go to state 219
    '&'         shift, and go to state 220
    EQ          shift, and go to state 221
    NE          shift, and go to state 222
    GT          shift, and go to state 223
    LT          shift, and go to state 224
    GE          shift, and go to state 225
    LE          shift, and go to state 226
    LSHIFT      shift, and go to state 227
    RSHIFT      shift, and go to state 228
    '+'         shift, and go to state 229
    '-'         shift, and go to state 230
    '*'         shift, and go to state 231
    '/'         shift, and go to state 232
    '%'         shift, and go to state 233

    $default  reduce using rule 222 (full_expr)


State 174

  142 Stmnt: full_expr .

    $default  reduce using rule 142 (Stmnt)


State 175

  223 full_expr: Expr .
  234 Expr: Expr . AND Expr
  235     | Expr . AND expr
  237     | Expr . OR Expr
  238     | Expr . OR expr

    OR   shift, and go to state 276
    AND  shift, and go to state 277

    $default  reduce using rule 223 (full_expr)


State 176

  232 Expr: Probe .

    $default  reduce using rule 232 (Expr)


State 177

   30 ltl_body: '{' full_expr . OS '}'

    SEMI   shift, and go to state 8
    ARROW  shift, and go to state 9

    $default  reduce using rule 161 (OS)

    OS    go to state 278
    semi  go to state 279


State 178

   19 proc: inst proctype NAME $@1 l_par . decl r_par $@2 Opt_priority Opt_enabler body

    HIDDEN   shift, and go to state 11
    SHOW     shift, and go to state 12
    ISLOCAL  shift, and go to state 13

    ')'       reduce using rule 78 (decl)
    $default  reduce using rule 67 (vis)

    vis       go to state 32
    one_decl  go to state 105
    decl_lst  go to state 280
    decl      go to state 281


State 179

   93 vardcl: NAME '[' const_expr . ']'
  172 const_expr: const_expr . '+' const_expr
  173           | const_expr . '-' const_expr
  174           | const_expr . '*' const_expr
  175           | const_expr . '/' const_expr
  176           | const_expr . '%' const_expr

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90
    ']'  shift, and go to state 282


State 180

   92 vardcl: NAME ':' CONST .

    $default  reduce using rule 92 (vardcl)


State 181

  269 nlst: NAME .

    $default  reduce using rule 269 (nlst)


State 182

   75 one_decl: vis TYPE asgn '{' nlst . '}'
  270 nlst: nlst . NAME
  271     | nlst . ','

    NAME  shift, and go to state 283
    '}'   shift, and go to state 284
    ','   shift, and go to state 285


State 183

   83 var_list: ivar ',' var_list .

    $default  reduce using rule 83 (var_list)


State 184

   90 ch_init: '[' . const_expr ']' OF '{' typ_list '}'

    CONST  shift, and go to state 60
    '-'    shift, and go to state 62
    '('    shift, and go to state 58

    l_par       go to state 63
    const_expr  go to state 286


State 185

   87 ivar: vardcl ASGN '{' . c_list '}'

    CONST  shift, and go to state 287

    c_list  go to state 288


State 186

   89 ivar: vardcl ASGN ch_init .

    $default  reduce using rule 89 (ivar)


State 187

   88 ivar: vardcl ASGN expr .
  178 expr: expr . '+' expr
  179     | expr . '-' expr
  180     | expr . '*' expr
  181     | expr . '/' expr
  182     | expr . '%' expr
  183     | expr . '&' expr
  184     | expr . '^' expr
  185     | expr . '|' expr
  186     | expr . GT expr
  187     | expr . LT expr
  188     | expr . GE expr
  189     | expr . LE expr
  190     | expr . EQ expr
  191     | expr . NE expr
  192     | expr . AND expr
  193     | expr . OR expr
  194     | expr . LSHIFT expr
  195     | expr . RSHIFT expr
  224 ltl_expr: expr . UNTIL expr
  225         | expr . RELEASE expr
  226         | expr . WEAK_UNTIL expr
  227         | expr . IMPLIES expr
  228         | expr . EQUIV expr

    IMPLIES     shift, and go to state 211
    EQUIV       shift, and go to state 212
    OR          shift, and go to state 213
    AND         shift, and go to state 214
    UNTIL       shift, and go to state 215
    WEAK_UNTIL  shift, and go to state 216
    RELEASE     shift, and go to state 217
    '|'         shift, and go to state 218
    '^'         shift, and go to state 219
    '&'         shift, and go to state 220
    EQ          shift, and go to state 221
    NE          shift, and go to state 222
    GT          shift, and go to state 223
    LT          shift, and go to state 224
    GE          shift, and go to state 225
    LE          shift, and go to state 226
    LSHIFT      shift, and go to state 227
    RSHIFT      shift, and go to state 228
    '+'         shift, and go to state 229
    '-'         shift, and go to state 230
    '*'         shift, and go to state 231
    '/'         shift, and go to state 232
    '%'         shift, and go to state 233

    $default  reduce using rule 88 (ivar)


State 188

   77 decl_lst: one_decl SEMI . decl_lst

    HIDDEN   shift, and go to state 11
    SHOW     shift, and go to state 12
    ISLOCAL  shift, and go to state 13

    $default  reduce using rule 67 (vis)

    vis       go to state 32
    one_decl  go to state 105
    decl_lst  go to state 289


State 189

   41 utype: TYPEDEF NAME $@7 '{' decl_lst '}' .

    $default  reduce using rule 41 (utype)


State 190

  167 aname: NAME .

    $default  reduce using rule 167 (aname)


State 191

  168 aname: PNAME .

    $default  reduce using rule 168 (aname)


State 192

  201 expr: RUN aname . $@33 l_par args r_par Opt_priority

    $default  reduce using rule 200 ($@33)

    $@33  go to state 290


State 193

  202 expr: LEN l_par . varref r_par

    NAME  shift, and go to state 116

    varref  go to state 291
    pfld    go to state 127
    cmpnd   go to state 128


State 194

  203 expr: ENABLED l_par . expr r_par

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 292
    ltl_expr  go to state 130


State 195

  204 expr: GET_P l_par . expr r_par

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 293
    ltl_expr  go to state 130


State 196

  214 expr: PC_VAL l_par . expr r_par

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 294
    ltl_expr  go to state 130


State 197

   97 pfld: NAME $@12 . '[' expr ']'

    '['  shift, and go to state 295


State 198

  215 expr: PNAME '[' . expr ']' '@' NAME
  216     | PNAME '[' . expr ']' ':' pfld

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 296
    ltl_expr  go to state 130


State 199

  218 expr: PNAME ':' . pfld

    NAME  shift, and go to state 116

    pfld  go to state 297


State 200

  217 expr: PNAME '@' . NAME

    NAME  shift, and go to state 298


State 201

  178 expr: expr . '+' expr
  179     | expr . '-' expr
  180     | expr . '*' expr
  181     | expr . '/' expr
  182     | expr . '%' expr
  183     | expr . '&' expr
  184     | expr . '^' expr
  185     | expr . '|' expr
  186     | expr . GT expr
  187     | expr . LT expr
  188     | expr . GE expr
  189     | expr . LE expr
  190     | expr . EQ expr
  191     | expr . NE expr
  192     | expr . AND expr
  193     | expr . OR expr
  194     | expr . LSHIFT expr
  195     | expr . RSHIFT expr
  198     | SND expr .
  224 ltl_expr: expr . UNTIL expr
  225         | expr . RELEASE expr
  226         | expr . WEAK_UNTIL expr
  227         | expr . IMPLIES expr
  228         | expr . EQUIV expr

    $default  reduce using rule 198 (expr)


State 202

  178 expr: expr . '+' expr
  179     | expr . '-' expr
  180     | expr . '*' expr
  181     | expr . '/' expr
  182     | expr . '%' expr
  183     | expr . '&' expr
  184     | expr . '^' expr
  185     | expr . '|' expr
  186     | expr . GT expr
  187     | expr . LT expr
  188     | expr . GE expr
  189     | expr . LE expr
  190     | expr . EQ expr
  191     | expr . NE expr
  192     | expr . AND expr
  193     | expr . OR expr
  194     | expr . LSHIFT expr
  195     | expr . RSHIFT expr
  224 ltl_expr: expr . UNTIL expr
  225         | expr . RELEASE expr
  226         | expr . WEAK_UNTIL expr
  227         | expr . IMPLIES expr
  228         | expr . EQUIV expr
  230         | ALWAYS expr .

    $default  reduce using rule 230 (ltl_expr)


State 203

  178 expr: expr . '+' expr
  179     | expr . '-' expr
  180     | expr . '*' expr
  181     | expr . '/' expr
  182     | expr . '%' expr
  183     | expr . '&' expr
  184     | expr . '^' expr
  185     | expr . '|' expr
  186     | expr . GT expr
  187     | expr . LT expr
  188     | expr . GE expr
  189     | expr . LE expr
  190     | expr . EQ expr
  191     | expr . NE expr
  192     | expr . AND expr
  193     | expr . OR expr
  194     | expr . LSHIFT expr
  195     | expr . RSHIFT expr
  224 ltl_expr: expr . UNTIL expr
  225         | expr . RELEASE expr
  226         | expr . WEAK_UNTIL expr
  227         | expr . IMPLIES expr
  228         | expr . EQUIV expr
  231         | EVENTUALLY expr .

    $default  reduce using rule 231 (ltl_expr)


State 204

  178 expr: expr . '+' expr
  179     | expr . '-' expr
  180     | expr . '*' expr
  181     | expr . '/' expr
  182     | expr . '%' expr
  183     | expr . '&' expr
  184     | expr . '^' expr
  185     | expr . '|' expr
  186     | expr . GT expr
  187     | expr . LT expr
  188     | expr . GE expr
  189     | expr . LE expr
  190     | expr . EQ expr
  191     | expr . NE expr
  192     | expr . AND expr
  193     | expr . OR expr
  194     | expr . LSHIFT expr
  195     | expr . RSHIFT expr
  224 ltl_expr: expr . UNTIL expr
  225         | expr . RELEASE expr
  226         | expr . WEAK_UNTIL expr
  227         | expr . IMPLIES expr
  228         | expr . EQUIV expr
  229         | NEXT expr .

    $default  reduce using rule 229 (ltl_expr)


State 205

  178 expr: expr . '+' expr
  179     | expr . '-' expr
  180     | expr . '*' expr
  181     | expr . '/' expr
  182     | expr . '%' expr
  183     | expr . '&' expr
  184     | expr . '^' expr
  185     | expr . '|' expr
  186     | expr . GT expr
  187     | expr . LT expr
  188     | expr . GE expr
  189     | expr . LE expr
  190     | expr . EQ expr
  191     | expr . NE expr
  192     | expr . AND expr
  193     | expr . OR expr
  194     | expr . LSHIFT expr
  195     | expr . RSHIFT expr
  197     | '-' expr .
  224 ltl_expr: expr . UNTIL expr
  225         | expr . RELEASE expr
  226         | expr . WEAK_UNTIL expr
  227         | expr . IMPLIES expr
  228         | expr . EQUIV expr

    $default  reduce using rule 197 (expr)


State 206

  178 expr: expr . '+' expr
  179     | expr . '-' expr
  180     | expr . '*' expr
  181     | expr . '/' expr
  182     | expr . '%' expr
  183     | expr . '&' expr
  184     | expr . '^' expr
  185     | expr . '|' expr
  186     | expr . GT expr
  187     | expr . LT expr
  188     | expr . GE expr
  189     | expr . LE expr
  190     | expr . EQ expr
  191     | expr . NE expr
  192     | expr . AND expr
  193     | expr . OR expr
  194     | expr . LSHIFT expr
  195     | expr . RSHIFT expr
  196     | '~' expr .
  224 ltl_expr: expr . UNTIL expr
  225         | expr . RELEASE expr
  226         | expr . WEAK_UNTIL expr
  227         | expr . IMPLIES expr
  228         | expr . EQUIV expr

    $default  reduce using rule 196 (expr)


State 207

  177 expr: l_par expr . r_par
  178     | expr . '+' expr
  179     | expr . '-' expr
  180     | expr . '*' expr
  181     | expr . '/' expr
  182     | expr . '%' expr
  183     | expr . '&' expr
  184     | expr . '^' expr
  185     | expr . '|' expr
  186     | expr . GT expr
  187     | expr . LT expr
  188     | expr . GE expr
  189     | expr . LE expr
  190     | expr . EQ expr
  191     | expr . NE expr
  192     | expr . AND expr
  193     | expr . OR expr
  194     | expr . LSHIFT expr
  195     | expr . RSHIFT expr
  199     | l_par expr . ARROW expr ':' expr r_par
  224 ltl_expr: expr . UNTIL expr
  225         | expr . RELEASE expr
  226         | expr . WEAK_UNTIL expr
  227         | expr . IMPLIES expr
  228         | expr . EQUIV expr

    ARROW       shift, and go to state 299
    IMPLIES     shift, and go to state 211
    EQUIV       shift, and go to state 212
    OR          shift, and go to state 213
    AND         shift, and go to state 214
    UNTIL       shift, and go to state 215
    WEAK_UNTIL  shift, and go to state 216
    RELEASE     shift, and go to state 217
    '|'         shift, and go to state 218
    '^'         shift, and go to state 219
    '&'         shift, and go to state 220
    EQ          shift, and go to state 221
    NE          shift, and go to state 222
    GT          shift, and go to state 223
    LT          shift, and go to state 224
    GE          shift, and go to state 225
    LE          shift, and go to state 226
    LSHIFT      shift, and go to state 227
    RSHIFT      shift, and go to state 228
    '+'         shift, and go to state 229
    '-'         shift, and go to state 230
    '*'         shift, and go to state 231
    '/'         shift, and go to state 232
    '%'         shift, and go to state 233
    ')'         shift, and go to state 133

    r_par  go to state 300


State 208

  206 expr: varref RCV . $@34 '[' rargs ']'

    $default  reduce using rule 205 ($@34)

    $@34  go to state 301


State 209

  208 expr: varref R_RCV . $@35 '[' rargs ']'

    $default  reduce using rule 207 ($@35)

    $@35  go to state 302


State 210

   99 cmpnd: pfld $@13 . sfld

    '.'  shift, and go to state 303

    $default  reduce using rule 100 (sfld)

    sfld  go to state 304


State 211

  227 ltl_expr: expr IMPLIES . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 305
    ltl_expr  go to state 130


State 212

  228 ltl_expr: expr EQUIV . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 306
    ltl_expr  go to state 130


State 213

  193 expr: expr OR . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 307
    ltl_expr  go to state 130


State 214

  192 expr: expr AND . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 308
    ltl_expr  go to state 130


State 215

  224 ltl_expr: expr UNTIL . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 309
    ltl_expr  go to state 130


State 216

  226 ltl_expr: expr WEAK_UNTIL . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 310
    ltl_expr  go to state 130


State 217

  225 ltl_expr: expr RELEASE . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 311
    ltl_expr  go to state 130


State 218

  185 expr: expr '|' . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 312
    ltl_expr  go to state 130


State 219

  184 expr: expr '^' . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 313
    ltl_expr  go to state 130


State 220

  183 expr: expr '&' . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 314
    ltl_expr  go to state 130


State 221

  190 expr: expr EQ . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 315
    ltl_expr  go to state 130


State 222

  191 expr: expr NE . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 316
    ltl_expr  go to state 130


State 223

  186 expr: expr GT . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 317
    ltl_expr  go to state 130


State 224

  187 expr: expr LT . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 318
    ltl_expr  go to state 130


State 225

  188 expr: expr GE . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 319
    ltl_expr  go to state 130


State 226

  189 expr: expr LE . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 320
    ltl_expr  go to state 130


State 227

  194 expr: expr LSHIFT . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 321
    ltl_expr  go to state 130


State 228

  195 expr: expr RSHIFT . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 322
    ltl_expr  go to state 130


State 229

  178 expr: expr '+' . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 323
    ltl_expr  go to state 130


State 230

  179 expr: expr '-' . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 324
    ltl_expr  go to state 130


State 231

  180 expr: expr '*' . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 325
    ltl_expr  go to state 130


State 232

  181 expr: expr '/' . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 326
    ltl_expr  go to state 130


State 233

  182 expr: expr '%' . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 327
    ltl_expr  go to state 130


State 234

  260 arg: expr ',' . arg

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 129
    ltl_expr  go to state 130
    arg       go to state 328


State 235

   45 ns: INLINE nm l_par $@8 args r_par .

    $default  reduce using rule 45 (ns)


State 236

  132 Stmnt: ASSERT full_expr .

    $default  reduce using rule 132 (Stmnt)


State 237

  129 Stmnt: PRINT l_par . STRING $@20 prargs r_par

    STRING  shift, and go to state 329


State 238

  130 Stmnt: PRINTM l_par . varref r_par
  131      | PRINTM l_par . CONST r_par

    CONST  shift, and go to state 330
    NAME   shift, and go to state 116

    varref  go to state 331
    pfld    go to state 127
    cmpnd   go to state 128


State 239

  127 Stmnt: SET_P l_par . two_args r_par

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 332
    ltl_expr  go to state 130
    two_args  go to state 333


State 240

  156 Stmnt: RETURN full_expr .

    $default  reduce using rule 156 (Stmnt)


State 241

  120 Special: GOTO NAME .

    $default  reduce using rule 120 (Special)


State 242

  160 option: SEP . $@32 sequence OS

    $default  reduce using rule 159 ($@32)

    $@32  go to state 334


State 243

  116 Special: IF options . FI

    FI  shift, and go to state 335


State 244

  157 options: option .
  158        | option . options

    SEP  shift, and go to state 242

    $default  reduce using rule 157 (options)

    options  go to state 336
    option   go to state 244


State 245

  118 Special: DO $@19 . options OD

    SEP  shift, and go to state 242

    options  go to state 337
    option   go to state 244


State 246

  105 for_pre: FOR l_par . $@14 varref

    $default  reduce using rule 104 ($@14)

    $@14  go to state 338


State 247

  115 Special: SELECT l_par . varref ':' expr DOTDOT expr r_par

    NAME  shift, and go to state 116

    varref  go to state 339
    pfld    go to state 127
    cmpnd   go to state 128


State 248

  145 Stmnt: ATOMIC '{' . $@25 sequence OS '}'

    $default  reduce using rule 144 ($@25)

    $@25  go to state 340


State 249

  147 Stmnt: D_STEP '{' . $@26 sequence OS '}'

    $default  reduce using rule 146 ($@26)

    $@26  go to state 341


State 250

  240 Probe: FULL l_par . varref r_par

    NAME  shift, and go to state 116

    varref  go to state 342
    pfld    go to state 127
    cmpnd   go to state 128


State 251

  242 Probe: EMPTY l_par . varref r_par

    NAME  shift, and go to state 116

    varref  go to state 343
    pfld    go to state 127
    cmpnd   go to state 128


State 252

  241 Probe: NFULL l_par . varref r_par

    NAME  shift, and go to state 116

    varref  go to state 344
    pfld    go to state 127
    cmpnd   go to state 128


State 253

  243 Probe: NEMPTY l_par . varref r_par

    NAME  shift, and go to state 116

    varref  go to state 345
    pfld    go to state 127
    cmpnd   go to state 128


State 254

   61 step: XU vref_lst .

    $default  reduce using rule 61 (step)


State 255

   80 vref_lst: varref .
   81         | varref . ',' vref_lst

    ','  shift, and go to state 346

    $default  reduce using rule 80 (vref_lst)


State 256

   62 step: NAME ':' . one_decl
   63     | NAME ':' . XU
  121 Special: NAME ':' . stmnt
  122        | NAME ':' .

    error        shift, and go to state 140
    ASSERT       shift, and go to state 141
    PRINT        shift, and go to state 142
    PRINTM       shift, and go to state 143
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    SET_P        shift, and go to state 144
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    RETURN       shift, and go to state 145
    GOTO         shift, and go to state 146
    BREAK        shift, and go to state 147
    ELSE         shift, and go to state 148
    IF           shift, and go to state 149
    DO           shift, and go to state 150
    FOR          shift, and go to state 151
    SELECT       shift, and go to state 152
    ATOMIC       shift, and go to state 153
    D_STEP       shift, and go to state 154
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    HIDDEN       shift, and go to state 11
    SHOW         shift, and go to state 12
    ISLOCAL      shift, and go to state 13
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    XU           shift, and go to state 347
    NAME         shift, and go to state 348
    PNAME        shift, and go to state 117
    INAME        shift, and go to state 161
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58
    '{'          shift, and go to state 162

    SEMI    reduce using rule 122 (Special)
    ARROW   reduce using rule 122 (Special)
    FI      reduce using rule 122 (Special)
    OD      reduce using rule 122 (Special)
    SEP     reduce using rule 122 (Special)
    UNLESS  reduce using rule 122 (Special)
    TYPE    reduce using rule 67 (vis)
    UNAME   reduce using rule 67 (vis)
    '}'     reduce using rule 122 (Special)

    l_par      go to state 163
    ccode      go to state 164
    cexpr      go to state 125
    vis        go to state 32
    one_decl   go to state 349
    varref     go to state 168
    pfld       go to state 127
    cmpnd      go to state 128
    stmnt      go to state 350
    for_pre    go to state 170
    Special    go to state 171
    Stmnt      go to state 172
    expr       go to state 173
    full_expr  go to state 174
    ltl_expr   go to state 130
    Expr       go to state 175
    Probe      go to state 176


State 257

  152 Stmnt: INAME $@28 . l_par args r_par $@29 Stmnt

    '('  shift, and go to state 58

    l_par  go to state 351


State 258

  149 Stmnt: '{' $@27 . sequence OS '}'

    error        shift, and go to state 140
    ASSERT       shift, and go to state 141
    PRINT        shift, and go to state 142
    PRINTM       shift, and go to state 143
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    SET_P        shift, and go to state 144
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    RETURN       shift, and go to state 145
    GOTO         shift, and go to state 146
    BREAK        shift, and go to state 147
    ELSE         shift, and go to state 148
    IF           shift, and go to state 149
    DO           shift, and go to state 150
    FOR          shift, and go to state 151
    SELECT       shift, and go to state 152
    ATOMIC       shift, and go to state 153
    D_STEP       shift, and go to state 154
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    HIDDEN       shift, and go to state 11
    SHOW         shift, and go to state 12
    ISLOCAL      shift, and go to state 13
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    XU           shift, and go to state 159
    NAME         shift, and go to state 160
    PNAME        shift, and go to state 117
    INAME        shift, and go to state 161
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58
    '{'          shift, and go to state 162

    TYPE   reduce using rule 67 (vis)
    UNAME  reduce using rule 67 (vis)

    l_par      go to state 163
    ccode      go to state 164
    cexpr      go to state 125
    sequence   go to state 352
    step       go to state 166
    vis        go to state 32
    one_decl   go to state 167
    varref     go to state 168
    pfld       go to state 127
    cmpnd      go to state 128
    stmnt      go to state 169
    for_pre    go to state 170
    Special    go to state 171
    Stmnt      go to state 172
    expr       go to state 173
    full_expr  go to state 174
    ltl_expr   go to state 130
    Expr       go to state 175
    Probe      go to state 176


State 259

  177 expr: l_par expr . r_par
  178     | expr . '+' expr
  179     | expr . '-' expr
  180     | expr . '*' expr
  181     | expr . '/' expr
  182     | expr . '%' expr
  183     | expr . '&' expr
  184     | expr . '^' expr
  185     | expr . '|' expr
  186     | expr . GT expr
  187     | expr . LT expr
  188     | expr . GE expr
  189     | expr . LE expr
  190     | expr . EQ expr
  191     | expr . NE expr
  192     | expr . AND expr
  193     | expr . OR expr
  194     | expr . LSHIFT expr
  195     | expr . RSHIFT expr
  199     | l_par expr . ARROW expr ':' expr r_par
  224 ltl_expr: expr . UNTIL expr
  225         | expr . RELEASE expr
  226         | expr . WEAK_UNTIL expr
  227         | expr . IMPLIES expr
  228         | expr . EQUIV expr
  236 Expr: expr . AND Expr
  239     | expr . OR Expr

    ARROW       shift, and go to state 299
    IMPLIES     shift, and go to state 211
    EQUIV       shift, and go to state 212
    OR          shift, and go to state 274
    AND         shift, and go to state 275
    UNTIL       shift, and go to state 215
    WEAK_UNTIL  shift, and go to state 216
    RELEASE     shift, and go to state 217
    '|'         shift, and go to state 218
    '^'         shift, and go to state 219
    '&'         shift, and go to state 220
    EQ          shift, and go to state 221
    NE          shift, and go to state 222
    GT          shift, and go to state 223
    LT          shift, and go to state 224
    GE          shift, and go to state 225
    LE          shift, and go to state 226
    LSHIFT      shift, and go to state 227
    RSHIFT      shift, and go to state 228
    '+'         shift, and go to state 229
    '-'         shift, and go to state 230
    '*'         shift, and go to state 231
    '/'         shift, and go to state 232
    '%'         shift, and go to state 233
    ')'         shift, and go to state 133

    r_par  go to state 300


State 260

  233 Expr: l_par Expr . r_par
  234     | Expr . AND Expr
  235     | Expr . AND expr
  237     | Expr . OR Expr
  238     | Expr . OR expr

    OR   shift, and go to state 276
    AND  shift, and go to state 277
    ')'  shift, and go to state 133

    r_par  go to state 353


State 261

   57 body: '{' $@9 sequence OS . $@10 '}'

    $default  reduce using rule 56 ($@10)

    $@10  go to state 354


State 262

  162 OS: semi .
  165 MS: semi .

    FI        reduce using rule 162 (OS)
    OD        reduce using rule 162 (OS)
    SEP       reduce using rule 162 (OS)
    '}'       reduce using rule 162 (OS)
    $default  reduce using rule 165 (MS)


State 263

   59 sequence: sequence MS . step
  166 MS: MS . semi

    error        shift, and go to state 140
    ASSERT       shift, and go to state 141
    PRINT        shift, and go to state 142
    PRINTM       shift, and go to state 143
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    SET_P        shift, and go to state 144
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    RETURN       shift, and go to state 145
    GOTO         shift, and go to state 146
    BREAK        shift, and go to state 147
    ELSE         shift, and go to state 148
    SEMI         shift, and go to state 8
    ARROW        shift, and go to state 9
    IF           shift, and go to state 149
    DO           shift, and go to state 150
    FOR          shift, and go to state 151
    SELECT       shift, and go to state 152
    ATOMIC       shift, and go to state 153
    D_STEP       shift, and go to state 154
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    HIDDEN       shift, and go to state 11
    SHOW         shift, and go to state 12
    ISLOCAL      shift, and go to state 13
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    XU           shift, and go to state 159
    NAME         shift, and go to state 160
    PNAME        shift, and go to state 117
    INAME        shift, and go to state 161
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58
    '{'          shift, and go to state 162

    TYPE   reduce using rule 67 (vis)
    UNAME  reduce using rule 67 (vis)

    l_par      go to state 163
    ccode      go to state 164
    cexpr      go to state 125
    step       go to state 355
    vis        go to state 32
    one_decl   go to state 167
    varref     go to state 168
    pfld       go to state 127
    cmpnd      go to state 128
    stmnt      go to state 169
    for_pre    go to state 170
    Special    go to state 171
    Stmnt      go to state 172
    semi       go to state 356
    expr       go to state 173
    full_expr  go to state 174
    ltl_expr   go to state 130
    Expr       go to state 175
    Probe      go to state 176


State 264

  124 Stmnt: varref ASGN . full_expr
  155      | varref ASGN . INAME $@30 l_par args r_par $@31 Stmnt

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    INAME        shift, and go to state 357
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par      go to state 163
    cexpr      go to state 125
    varref     go to state 126
    pfld       go to state 127
    cmpnd      go to state 128
    expr       go to state 173
    full_expr  go to state 358
    ltl_expr   go to state 130
    Expr       go to state 175
    Probe      go to state 176


State 265

  110 Special: varref SND . $@16 margs

    $default  reduce using rule 109 ($@16)

    $@16  go to state 359


State 266

  141 Stmnt: varref O_SND . $@24 margs

    $default  reduce using rule 140 ($@24)

    $@24  go to state 360


State 267

  108 Special: varref RCV . $@15 rargs
  137 Stmnt: varref RCV . $@22 LT rargs GT
  206 expr: varref RCV . $@34 '[' rargs ']'

    LT        reduce using rule 136 ($@22)
    '['       reduce using rule 205 ($@34)
    $default  reduce using rule 107 ($@15)

    $@15  go to state 361
    $@22  go to state 362
    $@34  go to state 301


State 268

  135 Stmnt: varref R_RCV . $@21 rargs
  139      | varref R_RCV . $@23 LT rargs GT
  208 expr: varref R_RCV . $@35 '[' rargs ']'

    LT        reduce using rule 138 ($@23)
    '['       reduce using rule 207 ($@35)
    $default  reduce using rule 134 ($@21)

    $@21  go to state 363
    $@23  go to state 364
    $@35  go to state 302


State 269

  125 Stmnt: varref INCR .

    $default  reduce using rule 125 (Stmnt)


State 270

  126 Stmnt: varref DECR .

    $default  reduce using rule 126 (Stmnt)


State 271

   66 step: stmnt UNLESS . $@11 stmnt

    $default  reduce using rule 65 ($@11)

    $@11  go to state 365


State 272

  114 Special: for_pre IN . varref r_par @18 for_post

    NAME  shift, and go to state 116

    varref  go to state 366
    pfld    go to state 127
    cmpnd   go to state 128


State 273

  112 Special: for_pre ':' . expr DOTDOT expr r_par $@17 for_post

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 367
    ltl_expr  go to state 130


State 274

  193 expr: expr OR . expr
  239 Expr: expr OR . Expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 163
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 368
    ltl_expr  go to state 130
    Expr      go to state 369
    Probe     go to state 176


State 275

  192 expr: expr AND . expr
  236 Expr: expr AND . Expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 163
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 370
    ltl_expr  go to state 130
    Expr      go to state 371
    Probe     go to state 176


State 276

  237 Expr: Expr OR . Expr
  238     | Expr OR . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 163
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 372
    ltl_expr  go to state 130
    Expr      go to state 373
    Probe     go to state 176


State 277

  234 Expr: Expr AND . Expr
  235     | Expr AND . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 163
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 374
    ltl_expr  go to state 130
    Expr      go to state 375
    Probe     go to state 176


State 278

   30 ltl_body: '{' full_expr OS . '}'

    '}'  shift, and go to state 376


State 279

  162 OS: semi .

    $default  reduce using rule 162 (OS)


State 280

   79 decl: decl_lst .

    $default  reduce using rule 79 (decl)


State 281

   19 proc: inst proctype NAME $@1 l_par decl . r_par $@2 Opt_priority Opt_enabler body

    ')'  shift, and go to state 133

    r_par  go to state 377


State 282

   93 vardcl: NAME '[' const_expr ']' .

    $default  reduce using rule 93 (vardcl)


State 283

  270 nlst: nlst NAME .

    $default  reduce using rule 270 (nlst)


State 284

   75 one_decl: vis TYPE asgn '{' nlst '}' .

    $default  reduce using rule 75 (one_decl)


State 285

  271 nlst: nlst ',' .

    $default  reduce using rule 271 (nlst)


State 286

   90 ch_init: '[' const_expr . ']' OF '{' typ_list '}'
  172 const_expr: const_expr . '+' const_expr
  173           | const_expr . '-' const_expr
  174           | const_expr . '*' const_expr
  175           | const_expr . '/' const_expr
  176           | const_expr . '%' const_expr

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90
    ']'  shift, and go to state 378


State 287

   84 c_list: CONST .
   85       | CONST . ',' c_list

    ','  shift, and go to state 379

    $default  reduce using rule 84 (c_list)


State 288

   87 ivar: vardcl ASGN '{' c_list . '}'

    '}'  shift, and go to state 380


State 289

   77 decl_lst: one_decl SEMI decl_lst .

    $default  reduce using rule 77 (decl_lst)


State 290

  201 expr: RUN aname $@33 . l_par args r_par Opt_priority

    '('  shift, and go to state 58

    l_par  go to state 381


State 291

  202 expr: LEN l_par varref . r_par

    ')'  shift, and go to state 133

    r_par  go to state 382


State 292

  178 expr: expr . '+' expr
  179     | expr . '-' expr
  180     | expr . '*' expr
  181     | expr . '/' expr
  182     | expr . '%' expr
  183     | expr . '&' expr
  184     | expr . '^' expr
  185     | expr . '|' expr
  186     | expr . GT expr
  187     | expr . LT expr
  188     | expr . GE expr
  189     | expr . LE expr
  190     | expr . EQ expr
  191     | expr . NE expr
  192     | expr . AND expr
  193     | expr . OR expr
  194     | expr . LSHIFT expr
  195     | expr . RSHIFT expr
  203     | ENABLED l_par expr . r_par
  224 ltl_expr: expr . UNTIL expr
  225         | expr . RELEASE expr
  226         | expr . WEAK_UNTIL expr
  227         | expr . IMPLIES expr
  228         | expr . EQUIV expr

    IMPLIES     shift, and go to state 211
    EQUIV       shift, and go to state 212
    OR          shift, and go to state 213
    AND         shift, and go to state 214
    UNTIL       shift, and go to state 215
    WEAK_UNTIL  shift, and go to state 216
    RELEASE     shift, and go to state 217
    '|'         shift, and go to state 218
    '^'         shift, and go to state 219
    '&'         shift, and go to state 220
    EQ          shift, and go to state 221
    NE          shift, and go to state 222
    GT          shift, and go to state 223
    LT          shift, and go to state 224
    GE          shift, and go to state 225
    LE          shift, and go to state 226
    LSHIFT      shift, and go to state 227
    RSHIFT      shift, and go to state 228
    '+'         shift, and go to state 229
    '-'         shift, and go to state 230
    '*'         shift, and go to state 231
    '/'         shift, and go to state 232
    '%'         shift, and go to state 233
    ')'         shift, and go to state 133

    r_par  go to state 383


State 293

  178 expr: expr . '+' expr
  179     | expr . '-' expr
  180     | expr . '*' expr
  181     | expr . '/' expr
  182     | expr . '%' expr
  183     | expr . '&' expr
  184     | expr . '^' expr
  185     | expr . '|' expr
  186     | expr . GT expr
  187     | expr . LT expr
  188     | expr . GE expr
  189     | expr . LE expr
  190     | expr . EQ expr
  191     | expr . NE expr
  192     | expr . AND expr
  193     | expr . OR expr
  194     | expr . LSHIFT expr
  195     | expr . RSHIFT expr
  204     | GET_P l_par expr . r_par
  224 ltl_expr: expr . UNTIL expr
  225         | expr . RELEASE expr
  226         | expr . WEAK_UNTIL expr
  227         | expr . IMPLIES expr
  228         | expr . EQUIV expr

    IMPLIES     shift, and go to state 211
    EQUIV       shift, and go to state 212
    OR          shift, and go to state 213
    AND         shift, and go to state 214
    UNTIL       shift, and go to state 215
    WEAK_UNTIL  shift, and go to state 216
    RELEASE     shift, and go to state 217
    '|'         shift, and go to state 218
    '^'         shift, and go to state 219
    '&'         shift, and go to state 220
    EQ          shift, and go to state 221
    NE          shift, and go to state 222
    GT          shift, and go to state 223
    LT          shift, and go to state 224
    GE          shift, and go to state 225
    LE          shift, and go to state 226
    LSHIFT      shift, and go to state 227
    RSHIFT      shift, and go to state 228
    '+'         shift, and go to state 229
    '-'         shift, and go to state 230
    '*'         shift, and go to state 231
    '/'         shift, and go to state 232
    '%'         shift, and go to state 233
    ')'         shift, and go to state 133

    r_par  go to state 384


State 294

  178 expr: expr . '+' expr
  179     | expr . '-' expr
  180     | expr . '*' expr
  181     | expr . '/' expr
  182     | expr . '%' expr
  183     | expr . '&' expr
  184     | expr . '^' expr
  185     | expr . '|' expr
  186     | expr . GT expr
  187     | expr . LT expr
  188     | expr . GE expr
  189     | expr . LE expr
  190     | expr . EQ expr
  191     | expr . NE expr
  192     | expr . AND expr
  193     | expr . OR expr
  194     | expr . LSHIFT expr
  195     | expr . RSHIFT expr
  214     | PC_VAL l_par expr . r_par
  224 ltl_expr: expr . UNTIL expr
  225         | expr . RELEASE expr
  226         | expr . WEAK_UNTIL expr
  227         | expr . IMPLIES expr
  228         | expr . EQUIV expr

    IMPLIES     shift, and go to state 211
    EQUIV       shift, and go to state 212
    OR          shift, and go to state 213
    AND         shift, and go to state 214
    UNTIL       shift, and go to state 215
    WEAK_UNTIL  shift, and go to state 216
    RELEASE     shift, and go to state 217
    '|'         shift, and go to state 218
    '^'         shift, and go to state 219
    '&'         shift, and go to state 220
    EQ          shift, and go to state 221
    NE          shift, and go to state 222
    GT          shift, and go to state 223
    LT          shift, and go to state 224
    GE          shift, and go to state 225
    LE          shift, and go to state 226
    LSHIFT      shift, and go to state 227
    RSHIFT      shift, and go to state 228
    '+'         shift, and go to state 229
    '-'         shift, and go to state 230
    '*'         shift, and go to state 231
    '/'         shift, and go to state 232
    '%'         shift, and go to state 233
    ')'         shift, and go to state 133

    r_par  go to state 385


State 295

   97 pfld: NAME $@12 '[' . expr ']'

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 386
    ltl_expr  go to state 130


State 296

  178 expr: expr . '+' expr
  179     | expr . '-' expr
  180     | expr . '*' expr
  181     | expr . '/' expr
  182     | expr . '%' expr
  183     | expr . '&' expr
  184     | expr . '^' expr
  185     | expr . '|' expr
  186     | expr . GT expr
  187     | expr . LT expr
  188     | expr . GE expr
  189     | expr . LE expr
  190     | expr . EQ expr
  191     | expr . NE expr
  192     | expr . AND expr
  193     | expr . OR expr
  194     | expr . LSHIFT expr
  195     | expr . RSHIFT expr
  215     | PNAME '[' expr . ']' '@' NAME
  216     | PNAME '[' expr . ']' ':' pfld
  224 ltl_expr: expr . UNTIL expr
  225         | expr . RELEASE expr
  226         | expr . WEAK_UNTIL expr
  227         | expr . IMPLIES expr
  228         | expr . EQUIV expr

    IMPLIES     shift, and go to state 211
    EQUIV       shift, and go to state 212
    OR          shift, and go to state 213
    AND         shift, and go to state 214
    UNTIL       shift, and go to state 215
    WEAK_UNTIL  shift, and go to state 216
    RELEASE     shift, and go to state 217
    '|'         shift, and go to state 218
    '^'         shift, and go to state 219
    '&'         shift, and go to state 220
    EQ          shift, and go to state 221
    NE          shift, and go to state 222
    GT          shift, and go to state 223
    LT          shift, and go to state 224
    GE          shift, and go to state 225
    LE          shift, and go to state 226
    LSHIFT      shift, and go to state 227
    RSHIFT      shift, and go to state 228
    '+'         shift, and go to state 229
    '-'         shift, and go to state 230
    '*'         shift, and go to state 231
    '/'         shift, and go to state 232
    '%'         shift, and go to state 233
    ']'         shift, and go to state 387


State 297

  218 expr: PNAME ':' pfld .

    $default  reduce using rule 218 (expr)


State 298

  217 expr: PNAME '@' NAME .

    $default  reduce using rule 217 (expr)


State 299

  199 expr: l_par expr ARROW . expr ':' expr r_par

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 388
    ltl_expr  go to state 130


State 300

  177 expr: l_par expr r_par .

    $default  reduce using rule 177 (expr)


State 301

  206 expr: varref RCV $@34 . '[' rargs ']'

    '['  shift, and go to state 389


State 302

  208 expr: varref R_RCV $@35 . '[' rargs ']'

    '['  shift, and go to state 390


State 303

  101 sfld: '.' . cmpnd

    NAME  shift, and go to state 116

    pfld   go to state 127
    cmpnd  go to state 391


State 304

   99 cmpnd: pfld $@13 sfld .

    $default  reduce using rule 99 (cmpnd)


State 305

  178 expr: expr . '+' expr
  179     | expr . '-' expr
  180     | expr . '*' expr
  181     | expr . '/' expr
  182     | expr . '%' expr
  183     | expr . '&' expr
  184     | expr . '^' expr
  185     | expr . '|' expr
  186     | expr . GT expr
  187     | expr . LT expr
  188     | expr . GE expr
  189     | expr . LE expr
  190     | expr . EQ expr
  191     | expr . NE expr
  192     | expr . AND expr
  193     | expr . OR expr
  194     | expr . LSHIFT expr
  195     | expr . RSHIFT expr
  224 ltl_expr: expr . UNTIL expr
  225         | expr . RELEASE expr
  226         | expr . WEAK_UNTIL expr
  227         | expr . IMPLIES expr
  227         | expr IMPLIES expr .
  228         | expr . EQUIV expr

    OR          shift, and go to state 213
    AND         shift, and go to state 214
    UNTIL       shift, and go to state 215
    WEAK_UNTIL  shift, and go to state 216
    RELEASE     shift, and go to state 217
    '|'         shift, and go to state 218
    '^'         shift, and go to state 219
    '&'         shift, and go to state 220
    EQ          shift, and go to state 221
    NE          shift, and go to state 222
    GT          shift, and go to state 223
    LT          shift, and go to state 224
    GE          shift, and go to state 225
    LE          shift, and go to state 226
    LSHIFT      shift, and go to state 227
    RSHIFT      shift, and go to state 228
    '+'         shift, and go to state 229
    '-'         shift, and go to state 230
    '*'         shift, and go to state 231
    '/'         shift, and go to state 232
    '%'         shift, and go to state 233

    $default  reduce using rule 227 (ltl_expr)


State 306

  178 expr: expr . '+' expr
  179     | expr . '-' expr
  180     | expr . '*' expr
  181     | expr . '/' expr
  182     | expr . '%' expr
  183     | expr . '&' expr
  184     | expr . '^' expr
  185     | expr . '|' expr
  186     | expr . GT expr
  187     | expr . LT expr
  188     | expr . GE expr
  189     | expr . LE expr
  190     | expr . EQ expr
  191     | expr . NE expr
  192     | expr . AND expr
  193     | expr . OR expr
  194     | expr . LSHIFT expr
  195     | expr . RSHIFT expr
  224 ltl_expr: expr . UNTIL expr
  225         | expr . RELEASE expr
  226         | expr . WEAK_UNTIL expr
  227         | expr . IMPLIES expr
  228         | expr . EQUIV expr
  228         | expr EQUIV expr .

    OR          shift, and go to state 213
    AND         shift, and go to state 214
    UNTIL       shift, and go to state 215
    WEAK_UNTIL  shift, and go to state 216
    RELEASE     shift, and go to state 217
    '|'         shift, and go to state 218
    '^'         shift, and go to state 219
    '&'         shift, and go to state 220
    EQ          shift, and go to state 221
    NE          shift, and go to state 222
    GT          shift, and go to state 223
    LT          shift, and go to state 224
    GE          shift, and go to state 225
    LE          shift, and go to state 226
    LSHIFT      shift, and go to state 227
    RSHIFT      shift, and go to state 228
    '+'         shift, and go to state 229
    '-'         shift, and go to state 230
    '*'         shift, and go to state 231
    '/'         shift, and go to state 232
    '%'         shift, and go to state 233

    $default  reduce using rule 228 (ltl_expr)


State 307

  178 expr: expr . '+' expr
  179     | expr . '-' expr
  180     | expr . '*' expr
  181     | expr . '/' expr
  182     | expr . '%' expr
  183     | expr . '&' expr
  184     | expr . '^' expr
  185     | expr . '|' expr
  186     | expr . GT expr
  187     | expr . LT expr
  188     | expr . GE expr
  189     | expr . LE expr
  190     | expr . EQ expr
  191     | expr . NE expr
  192     | expr . AND expr
  193     | expr . OR expr
  193     | expr OR expr .
  194     | expr . LSHIFT expr
  195     | expr . RSHIFT expr
  224 ltl_expr: expr . UNTIL expr
  225         | expr . RELEASE expr
  226         | expr . WEAK_UNTIL expr
  227         | expr . IMPLIES expr
  228         | expr . EQUIV expr

    AND         shift, and go to state 214
    UNTIL       shift, and go to state 215
    WEAK_UNTIL  shift, and go to state 216
    RELEASE     shift, and go to state 217
    '|'         shift, and go to state 218
    '^'         shift, and go to state 219
    '&'         shift, and go to state 220
    EQ          shift, and go to state 221
    NE          shift, and go to state 222
    GT          shift, and go to state 223
    LT          shift, and go to state 224
    GE          shift, and go to state 225
    LE          shift, and go to state 226
    LSHIFT      shift, and go to state 227
    RSHIFT      shift, and go to state 228
    '+'         shift, and go to state 229
    '-'         shift, and go to state 230
    '*'         shift, and go to state 231
    '/'         shift, and go to state 232
    '%'         shift, and go to state 233

    $default  reduce using rule 193 (expr)


State 308

  178 expr: expr . '+' expr
  179     | expr . '-' expr
  180     | expr . '*' expr
  181     | expr . '/' expr
  182     | expr . '%' expr
  183     | expr . '&' expr
  184     | expr . '^' expr
  185     | expr . '|' expr
  186     | expr . GT expr
  187     | expr . LT expr
  188     | expr . GE expr
  189     | expr . LE expr
  190     | expr . EQ expr
  191     | expr . NE expr
  192     | expr . AND expr
  192     | expr AND expr .
  193     | expr . OR expr
  194     | expr . LSHIFT expr
  195     | expr . RSHIFT expr
  224 ltl_expr: expr . UNTIL expr
  225         | expr . RELEASE expr
  226         | expr . WEAK_UNTIL expr
  227         | expr . IMPLIES expr
  228         | expr . EQUIV expr

    UNTIL       shift, and go to state 215
    WEAK_UNTIL  shift, and go to state 216
    RELEASE     shift, and go to state 217
    '|'         shift, and go to state 218
    '^'         shift, and go to state 219
    '&'         shift, and go to state 220
    EQ          shift, and go to state 221
    NE          shift, and go to state 222
    GT          shift, and go to state 223
    LT          shift, and go to state 224
    GE          shift, and go to state 225
    LE          shift, and go to state 226
    LSHIFT      shift, and go to state 227
    RSHIFT      shift, and go to state 228
    '+'         shift, and go to state 229
    '-'         shift, and go to state 230
    '*'         shift, and go to state 231
    '/'         shift, and go to state 232
    '%'         shift, and go to state 233

    $default  reduce using rule 192 (expr)


State 309

  178 expr: expr . '+' expr
  179     | expr . '-' expr
  180     | expr . '*' expr
  181     | expr . '/' expr
  182     | expr . '%' expr
  183     | expr . '&' expr
  184     | expr . '^' expr
  185     | expr . '|' expr
  186     | expr . GT expr
  187     | expr . LT expr
  188     | expr . GE expr
  189     | expr . LE expr
  190     | expr . EQ expr
  191     | expr . NE expr
  192     | expr . AND expr
  193     | expr . OR expr
  194     | expr . LSHIFT expr
  195     | expr . RSHIFT expr
  224 ltl_expr: expr . UNTIL expr
  224         | expr UNTIL expr .
  225         | expr . RELEASE expr
  226         | expr . WEAK_UNTIL expr
  227         | expr . IMPLIES expr
  228         | expr . EQUIV expr

    '|'     shift, and go to state 218
    '^'     shift, and go to state 219
    '&'     shift, and go to state 220
    EQ      shift, and go to state 221
    NE      shift, and go to state 222
    GT      shift, and go to state 223
    LT      shift, and go to state 224
    GE      shift, and go to state 225
    LE      shift, and go to state 226
    LSHIFT  shift, and go to state 227
    RSHIFT  shift, and go to state 228
    '+'     shift, and go to state 229
    '-'     shift, and go to state 230
    '*'     shift, and go to state 231
    '/'     shift, and go to state 232
    '%'     shift, and go to state 233

    $default  reduce using rule 224 (ltl_expr)


State 310

  178 expr: expr . '+' expr
  179     | expr . '-' expr
  180     | expr . '*' expr
  181     | expr . '/' expr
  182     | expr . '%' expr
  183     | expr . '&' expr
  184     | expr . '^' expr
  185     | expr . '|' expr
  186     | expr . GT expr
  187     | expr . LT expr
  188     | expr . GE expr
  189     | expr . LE expr
  190     | expr . EQ expr
  191     | expr . NE expr
  192     | expr . AND expr
  193     | expr . OR expr
  194     | expr . LSHIFT expr
  195     | expr . RSHIFT expr
  224 ltl_expr: expr . UNTIL expr
  225         | expr . RELEASE expr
  226         | expr . WEAK_UNTIL expr
  226         | expr WEAK_UNTIL expr .
  227         | expr . IMPLIES expr
  228         | expr . EQUIV expr

    '|'     shift, and go to state 218
    '^'     shift, and go to state 219
    '&'     shift, and go to state 220
    EQ      shift, and go to state 221
    NE      shift, and go to state 222
    GT      shift, and go to state 223
    LT      shift, and go to state 224
    GE      shift, and go to state 225
    LE      shift, and go to state 226
    LSHIFT  shift, and go to state 227
    RSHIFT  shift, and go to state 228
    '+'     shift, and go to state 229
    '-'     shift, and go to state 230
    '*'     shift, and go to state 231
    '/'     shift, and go to state 232
    '%'     shift, and go to state 233

    $default  reduce using rule 226 (ltl_expr)


State 311

  178 expr: expr . '+' expr
  179     | expr . '-' expr
  180     | expr . '*' expr
  181     | expr . '/' expr
  182     | expr . '%' expr
  183     | expr . '&' expr
  184     | expr . '^' expr
  185     | expr . '|' expr
  186     | expr . GT expr
  187     | expr . LT expr
  188     | expr . GE expr
  189     | expr . LE expr
  190     | expr . EQ expr
  191     | expr . NE expr
  192     | expr . AND expr
  193     | expr . OR expr
  194     | expr . LSHIFT expr
  195     | expr . RSHIFT expr
  224 ltl_expr: expr . UNTIL expr
  225         | expr . RELEASE expr
  225         | expr RELEASE expr .
  226         | expr . WEAK_UNTIL expr
  227         | expr . IMPLIES expr
  228         | expr . EQUIV expr

    '|'     shift, and go to state 218
    '^'     shift, and go to state 219
    '&'     shift, and go to state 220
    EQ      shift, and go to state 221
    NE      shift, and go to state 222
    GT      shift, and go to state 223
    LT      shift, and go to state 224
    GE      shift, and go to state 225
    LE      shift, and go to state 226
    LSHIFT  shift, and go to state 227
    RSHIFT  shift, and go to state 228
    '+'     shift, and go to state 229
    '-'     shift, and go to state 230
    '*'     shift, and go to state 231
    '/'     shift, and go to state 232
    '%'     shift, and go to state 233

    $default  reduce using rule 225 (ltl_expr)


State 312

  178 expr: expr . '+' expr
  179     | expr . '-' expr
  180     | expr . '*' expr
  181     | expr . '/' expr
  182     | expr . '%' expr
  183     | expr . '&' expr
  184     | expr . '^' expr
  185     | expr . '|' expr
  185     | expr '|' expr .
  186     | expr . GT expr
  187     | expr . LT expr
  188     | expr . GE expr
  189     | expr . LE expr
  190     | expr . EQ expr
  191     | expr . NE expr
  192     | expr . AND expr
  193     | expr . OR expr
  194     | expr . LSHIFT expr
  195     | expr . RSHIFT expr
  224 ltl_expr: expr . UNTIL expr
  225         | expr . RELEASE expr
  226         | expr . WEAK_UNTIL expr
  227         | expr . IMPLIES expr
  228         | expr . EQUIV expr

    '^'     shift, and go to state 219
    '&'     shift, and go to state 220
    EQ      shift, and go to state 221
    NE      shift, and go to state 222
    GT      shift, and go to state 223
    LT      shift, and go to state 224
    GE      shift, and go to state 225
    LE      shift, and go to state 226
    LSHIFT  shift, and go to state 227
    RSHIFT  shift, and go to state 228
    '+'     shift, and go to state 229
    '-'     shift, and go to state 230
    '*'     shift, and go to state 231
    '/'     shift, and go to state 232
    '%'     shift, and go to state 233

    $default  reduce using rule 185 (expr)


State 313

  178 expr: expr . '+' expr
  179     | expr . '-' expr
  180     | expr . '*' expr
  181     | expr . '/' expr
  182     | expr . '%' expr
  183     | expr . '&' expr
  184     | expr . '^' expr
  184     | expr '^' expr .
  185     | expr . '|' expr
  186     | expr . GT expr
  187     | expr . LT expr
  188     | expr . GE expr
  189     | expr . LE expr
  190     | expr . EQ expr
  191     | expr . NE expr
  192     | expr . AND expr
  193     | expr . OR expr
  194     | expr . LSHIFT expr
  195     | expr . RSHIFT expr
  224 ltl_expr: expr . UNTIL expr
  225         | expr . RELEASE expr
  226         | expr . WEAK_UNTIL expr
  227         | expr . IMPLIES expr
  228         | expr . EQUIV expr

    '&'     shift, and go to state 220
    EQ      shift, and go to state 221
    NE      shift, and go to state 222
    GT      shift, and go to state 223
    LT      shift, and go to state 224
    GE      shift, and go to state 225
    LE      shift, and go to state 226
    LSHIFT  shift, and go to state 227
    RSHIFT  shift, and go to state 228
    '+'     shift, and go to state 229
    '-'     shift, and go to state 230
    '*'     shift, and go to state 231
    '/'     shift, and go to state 232
    '%'     shift, and go to state 233

    $default  reduce using rule 184 (expr)


State 314

  178 expr: expr . '+' expr
  179     | expr . '-' expr
  180     | expr . '*' expr
  181     | expr . '/' expr
  182     | expr . '%' expr
  183     | expr . '&' expr
  183     | expr '&' expr .
  184     | expr . '^' expr
  185     | expr . '|' expr
  186     | expr . GT expr
  187     | expr . LT expr
  188     | expr . GE expr
  189     | expr . LE expr
  190     | expr . EQ expr
  191     | expr . NE expr
  192     | expr . AND expr
  193     | expr . OR expr
  194     | expr . LSHIFT expr
  195     | expr . RSHIFT expr
  224 ltl_expr: expr . UNTIL expr
  225         | expr . RELEASE expr
  226         | expr . WEAK_UNTIL expr
  227         | expr . IMPLIES expr
  228         | expr . EQUIV expr

    EQ      shift, and go to state 221
    NE      shift, and go to state 222
    GT      shift, and go to state 223
    LT      shift, and go to state 224
    GE      shift, and go to state 225
    LE      shift, and go to state 226
    LSHIFT  shift, and go to state 227
    RSHIFT  shift, and go to state 228
    '+'     shift, and go to state 229
    '-'     shift, and go to state 230
    '*'     shift, and go to state 231
    '/'     shift, and go to state 232
    '%'     shift, and go to state 233

    $default  reduce using rule 183 (expr)


State 315

  178 expr: expr . '+' expr
  179     | expr . '-' expr
  180     | expr . '*' expr
  181     | expr . '/' expr
  182     | expr . '%' expr
  183     | expr . '&' expr
  184     | expr . '^' expr
  185     | expr . '|' expr
  186     | expr . GT expr
  187     | expr . LT expr
  188     | expr . GE expr
  189     | expr . LE expr
  190     | expr . EQ expr
  190     | expr EQ expr .
  191     | expr . NE expr
  192     | expr . AND expr
  193     | expr . OR expr
  194     | expr . LSHIFT expr
  195     | expr . RSHIFT expr
  224 ltl_expr: expr . UNTIL expr
  225         | expr . RELEASE expr
  226         | expr . WEAK_UNTIL expr
  227         | expr . IMPLIES expr
  228         | expr . EQUIV expr

    GT      shift, and go to state 223
    LT      shift, and go to state 224
    GE      shift, and go to state 225
    LE      shift, and go to state 226
    LSHIFT  shift, and go to state 227
    RSHIFT  shift, and go to state 228
    '+'     shift, and go to state 229
    '-'     shift, and go to state 230
    '*'     shift, and go to state 231
    '/'     shift, and go to state 232
    '%'     shift, and go to state 233

    $default  reduce using rule 190 (expr)


State 316

  178 expr: expr . '+' expr
  179     | expr . '-' expr
  180     | expr . '*' expr
  181     | expr . '/' expr
  182     | expr . '%' expr
  183     | expr . '&' expr
  184     | expr . '^' expr
  185     | expr . '|' expr
  186     | expr . GT expr
  187     | expr . LT expr
  188     | expr . GE expr
  189     | expr . LE expr
  190     | expr . EQ expr
  191     | expr . NE expr
  191     | expr NE expr .
  192     | expr . AND expr
  193     | expr . OR expr
  194     | expr . LSHIFT expr
  195     | expr . RSHIFT expr
  224 ltl_expr: expr . UNTIL expr
  225         | expr . RELEASE expr
  226         | expr . WEAK_UNTIL expr
  227         | expr . IMPLIES expr
  228         | expr . EQUIV expr

    GT      shift, and go to state 223
    LT      shift, and go to state 224
    GE      shift, and go to state 225
    LE      shift, and go to state 226
    LSHIFT  shift, and go to state 227
    RSHIFT  shift, and go to state 228
    '+'     shift, and go to state 229
    '-'     shift, and go to state 230
    '*'     shift, and go to state 231
    '/'     shift, and go to state 232
    '%'     shift, and go to state 233

    $default  reduce using rule 191 (expr)


State 317

  178 expr: expr . '+' expr
  179     | expr . '-' expr
  180     | expr . '*' expr
  181     | expr . '/' expr
  182     | expr . '%' expr
  183     | expr . '&' expr
  184     | expr . '^' expr
  185     | expr . '|' expr
  186     | expr . GT expr
  186     | expr GT expr .
  187     | expr . LT expr
  188     | expr . GE expr
  189     | expr . LE expr
  190     | expr . EQ expr
  191     | expr . NE expr
  192     | expr . AND expr
  193     | expr . OR expr
  194     | expr . LSHIFT expr
  195     | expr . RSHIFT expr
  224 ltl_expr: expr . UNTIL expr
  225         | expr . RELEASE expr
  226         | expr . WEAK_UNTIL expr
  227         | expr . IMPLIES expr
  228         | expr . EQUIV expr

    LSHIFT  shift, and go to state 227
    RSHIFT  shift, and go to state 228
    '+'     shift, and go to state 229
    '-'     shift, and go to state 230
    '*'     shift, and go to state 231
    '/'     shift, and go to state 232
    '%'     shift, and go to state 233

    $default  reduce using rule 186 (expr)


State 318

  178 expr: expr . '+' expr
  179     | expr . '-' expr
  180     | expr . '*' expr
  181     | expr . '/' expr
  182     | expr . '%' expr
  183     | expr . '&' expr
  184     | expr . '^' expr
  185     | expr . '|' expr
  186     | expr . GT expr
  187     | expr . LT expr
  187     | expr LT expr .
  188     | expr . GE expr
  189     | expr . LE expr
  190     | expr . EQ expr
  191     | expr . NE expr
  192     | expr . AND expr
  193     | expr . OR expr
  194     | expr . LSHIFT expr
  195     | expr . RSHIFT expr
  224 ltl_expr: expr . UNTIL expr
  225         | expr . RELEASE expr
  226         | expr . WEAK_UNTIL expr
  227         | expr . IMPLIES expr
  228         | expr . EQUIV expr

    LSHIFT  shift, and go to state 227
    RSHIFT  shift, and go to state 228
    '+'     shift, and go to state 229
    '-'     shift, and go to state 230
    '*'     shift, and go to state 231
    '/'     shift, and go to state 232
    '%'     shift, and go to state 233

    $default  reduce using rule 187 (expr)


State 319

  178 expr: expr . '+' expr
  179     | expr . '-' expr
  180     | expr . '*' expr
  181     | expr . '/' expr
  182     | expr . '%' expr
  183     | expr . '&' expr
  184     | expr . '^' expr
  185     | expr . '|' expr
  186     | expr . GT expr
  187     | expr . LT expr
  188     | expr . GE expr
  188     | expr GE expr .
  189     | expr . LE expr
  190     | expr . EQ expr
  191     | expr . NE expr
  192     | expr . AND expr
  193     | expr . OR expr
  194     | expr . LSHIFT expr
  195     | expr . RSHIFT expr
  224 ltl_expr: expr . UNTIL expr
  225         | expr . RELEASE expr
  226         | expr . WEAK_UNTIL expr
  227         | expr . IMPLIES expr
  228         | expr . EQUIV expr

    LSHIFT  shift, and go to state 227
    RSHIFT  shift, and go to state 228
    '+'     shift, and go to state 229
    '-'     shift, and go to state 230
    '*'     shift, and go to state 231
    '/'     shift, and go to state 232
    '%'     shift, and go to state 233

    $default  reduce using rule 188 (expr)


State 320

  178 expr: expr . '+' expr
  179     | expr . '-' expr
  180     | expr . '*' expr
  181     | expr . '/' expr
  182     | expr . '%' expr
  183     | expr . '&' expr
  184     | expr . '^' expr
  185     | expr . '|' expr
  186     | expr . GT expr
  187     | expr . LT expr
  188     | expr . GE expr
  189     | expr . LE expr
  189     | expr LE expr .
  190     | expr . EQ expr
  191     | expr . NE expr
  192     | expr . AND expr
  193     | expr . OR expr
  194     | expr . LSHIFT expr
  195     | expr . RSHIFT expr
  224 ltl_expr: expr . UNTIL expr
  225         | expr . RELEASE expr
  226         | expr . WEAK_UNTIL expr
  227         | expr . IMPLIES expr
  228         | expr . EQUIV expr

    LSHIFT  shift, and go to state 227
    RSHIFT  shift, and go to state 228
    '+'     shift, and go to state 229
    '-'     shift, and go to state 230
    '*'     shift, and go to state 231
    '/'     shift, and go to state 232
    '%'     shift, and go to state 233

    $default  reduce using rule 189 (expr)


State 321

  178 expr: expr . '+' expr
  179     | expr . '-' expr
  180     | expr . '*' expr
  181     | expr . '/' expr
  182     | expr . '%' expr
  183     | expr . '&' expr
  184     | expr . '^' expr
  185     | expr . '|' expr
  186     | expr . GT expr
  187     | expr . LT expr
  188     | expr . GE expr
  189     | expr . LE expr
  190     | expr . EQ expr
  191     | expr . NE expr
  192     | expr . AND expr
  193     | expr . OR expr
  194     | expr . LSHIFT expr
  194     | expr LSHIFT expr .
  195     | expr . RSHIFT expr
  224 ltl_expr: expr . UNTIL expr
  225         | expr . RELEASE expr
  226         | expr . WEAK_UNTIL expr
  227         | expr . IMPLIES expr
  228         | expr . EQUIV expr

    '+'  shift, and go to state 229
    '-'  shift, and go to state 230
    '*'  shift, and go to state 231
    '/'  shift, and go to state 232
    '%'  shift, and go to state 233

    $default  reduce using rule 194 (expr)


State 322

  178 expr: expr . '+' expr
  179     | expr . '-' expr
  180     | expr . '*' expr
  181     | expr . '/' expr
  182     | expr . '%' expr
  183     | expr . '&' expr
  184     | expr . '^' expr
  185     | expr . '|' expr
  186     | expr . GT expr
  187     | expr . LT expr
  188     | expr . GE expr
  189     | expr . LE expr
  190     | expr . EQ expr
  191     | expr . NE expr
  192     | expr . AND expr
  193     | expr . OR expr
  194     | expr . LSHIFT expr
  195     | expr . RSHIFT expr
  195     | expr RSHIFT expr .
  224 ltl_expr: expr . UNTIL expr
  225         | expr . RELEASE expr
  226         | expr . WEAK_UNTIL expr
  227         | expr . IMPLIES expr
  228         | expr . EQUIV expr

    '+'  shift, and go to state 229
    '-'  shift, and go to state 230
    '*'  shift, and go to state 231
    '/'  shift, and go to state 232
    '%'  shift, and go to state 233

    $default  reduce using rule 195 (expr)


State 323

  178 expr: expr . '+' expr
  178     | expr '+' expr .
  179     | expr . '-' expr
  180     | expr . '*' expr
  181     | expr . '/' expr
  182     | expr . '%' expr
  183     | expr . '&' expr
  184     | expr . '^' expr
  185     | expr . '|' expr
  186     | expr . GT expr
  187     | expr . LT expr
  188     | expr . GE expr
  189     | expr . LE expr
  190     | expr . EQ expr
  191     | expr . NE expr
  192     | expr . AND expr
  193     | expr . OR expr
  194     | expr . LSHIFT expr
  195     | expr . RSHIFT expr
  224 ltl_expr: expr . UNTIL expr
  225         | expr . RELEASE expr
  226         | expr . WEAK_UNTIL expr
  227         | expr . IMPLIES expr
  228         | expr . EQUIV expr

    '*'  shift, and go to state 231
    '/'  shift, and go to state 232
    '%'  shift, and go to state 233

    $default  reduce using rule 178 (expr)


State 324

  178 expr: expr . '+' expr
  179     | expr . '-' expr
  179     | expr '-' expr .
  180     | expr . '*' expr
  181     | expr . '/' expr
  182     | expr . '%' expr
  183     | expr . '&' expr
  184     | expr . '^' expr
  185     | expr . '|' expr
  186     | expr . GT expr
  187     | expr . LT expr
  188     | expr . GE expr
  189     | expr . LE expr
  190     | expr . EQ expr
  191     | expr . NE expr
  192     | expr . AND expr
  193     | expr . OR expr
  194     | expr . LSHIFT expr
  195     | expr . RSHIFT expr
  224 ltl_expr: expr . UNTIL expr
  225         | expr . RELEASE expr
  226         | expr . WEAK_UNTIL expr
  227         | expr . IMPLIES expr
  228         | expr . EQUIV expr

    '*'  shift, and go to state 231
    '/'  shift, and go to state 232
    '%'  shift, and go to state 233

    $default  reduce using rule 179 (expr)


State 325

  178 expr: expr . '+' expr
  179     | expr . '-' expr
  180     | expr . '*' expr
  180     | expr '*' expr .
  181     | expr . '/' expr
  182     | expr . '%' expr
  183     | expr . '&' expr
  184     | expr . '^' expr
  185     | expr . '|' expr
  186     | expr . GT expr
  187     | expr . LT expr
  188     | expr . GE expr
  189     | expr . LE expr
  190     | expr . EQ expr
  191     | expr . NE expr
  192     | expr . AND expr
  193     | expr . OR expr
  194     | expr . LSHIFT expr
  195     | expr . RSHIFT expr
  224 ltl_expr: expr . UNTIL expr
  225         | expr . RELEASE expr
  226         | expr . WEAK_UNTIL expr
  227         | expr . IMPLIES expr
  228         | expr . EQUIV expr

    $default  reduce using rule 180 (expr)


State 326

  178 expr: expr . '+' expr
  179     | expr . '-' expr
  180     | expr . '*' expr
  181     | expr . '/' expr
  181     | expr '/' expr .
  182     | expr . '%' expr
  183     | expr . '&' expr
  184     | expr . '^' expr
  185     | expr . '|' expr
  186     | expr . GT expr
  187     | expr . LT expr
  188     | expr . GE expr
  189     | expr . LE expr
  190     | expr . EQ expr
  191     | expr . NE expr
  192     | expr . AND expr
  193     | expr . OR expr
  194     | expr . LSHIFT expr
  195     | expr . RSHIFT expr
  224 ltl_expr: expr . UNTIL expr
  225         | expr . RELEASE expr
  226         | expr . WEAK_UNTIL expr
  227         | expr . IMPLIES expr
  228         | expr . EQUIV expr

    $default  reduce using rule 181 (expr)


State 327

  178 expr: expr . '+' expr
  179     | expr . '-' expr
  180     | expr . '*' expr
  181     | expr . '/' expr
  182     | expr . '%' expr
  182     | expr '%' expr .
  183     | expr . '&' expr
  184     | expr . '^' expr
  185     | expr . '|' expr
  186     | expr . GT expr
  187     | expr . LT expr
  188     | expr . GE expr
  189     | expr . LE expr
  190     | expr . EQ expr
  191     | expr . NE expr
  192     | expr . AND expr
  193     | expr . OR expr
  194     | expr . LSHIFT expr
  195     | expr . RSHIFT expr
  224 ltl_expr: expr . UNTIL expr
  225         | expr . RELEASE expr
  226         | expr . WEAK_UNTIL expr
  227         | expr . IMPLIES expr
  228         | expr . EQUIV expr

    $default  reduce using rule 182 (expr)


State 328

  260 arg: expr ',' arg .

    $default  reduce using rule 260 (arg)


State 329

  129 Stmnt: PRINT l_par STRING . $@20 prargs r_par

    $default  reduce using rule 128 ($@20)

    $@20  go to state 392


State 330

  131 Stmnt: PRINTM l_par CONST . r_par

    ')'  shift, and go to state 133

    r_par  go to state 393


State 331

  130 Stmnt: PRINTM l_par varref . r_par

    ')'  shift, and go to state 133

    r_par  go to state 394


State 332

  178 expr: expr . '+' expr
  179     | expr . '-' expr
  180     | expr . '*' expr
  181     | expr . '/' expr
  182     | expr . '%' expr
  183     | expr . '&' expr
  184     | expr . '^' expr
  185     | expr . '|' expr
  186     | expr . GT expr
  187     | expr . LT expr
  188     | expr . GE expr
  189     | expr . LE expr
  190     | expr . EQ expr
  191     | expr . NE expr
  192     | expr . AND expr
  193     | expr . OR expr
  194     | expr . LSHIFT expr
  195     | expr . RSHIFT expr
  224 ltl_expr: expr . UNTIL expr
  225         | expr . RELEASE expr
  226         | expr . WEAK_UNTIL expr
  227         | expr . IMPLIES expr
  228         | expr . EQUIV expr
  252 two_args: expr . ',' expr

    IMPLIES     shift, and go to state 211
    EQUIV       shift, and go to state 212
    OR          shift, and go to state 213
    AND         shift, and go to state 214
    UNTIL       shift, and go to state 215
    WEAK_UNTIL  shift, and go to state 216
    RELEASE     shift, and go to state 217
    '|'         shift, and go to state 218
    '^'         shift, and go to state 219
    '&'         shift, and go to state 220
    EQ          shift, and go to state 221
    NE          shift, and go to state 222
    GT          shift, and go to state 223
    LT          shift, and go to state 224
    GE          shift, and go to state 225
    LE          shift, and go to state 226
    LSHIFT      shift, and go to state 227
    RSHIFT      shift, and go to state 228
    '+'         shift, and go to state 229
    '-'         shift, and go to state 230
    '*'         shift, and go to state 231
    '/'         shift, and go to state 232
    '%'         shift, and go to state 233
    ','         shift, and go to state 395


State 333

  127 Stmnt: SET_P l_par two_args . r_par

    ')'  shift, and go to state 133

    r_par  go to state 396


State 334

  160 option: SEP $@32 . sequence OS

    error        shift, and go to state 140
    ASSERT       shift, and go to state 141
    PRINT        shift, and go to state 142
    PRINTM       shift, and go to state 143
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    SET_P        shift, and go to state 144
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    RETURN       shift, and go to state 145
    GOTO         shift, and go to state 146
    BREAK        shift, and go to state 147
    ELSE         shift, and go to state 148
    IF           shift, and go to state 149
    DO           shift, and go to state 150
    FOR          shift, and go to state 151
    SELECT       shift, and go to state 152
    ATOMIC       shift, and go to state 153
    D_STEP       shift, and go to state 154
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    HIDDEN       shift, and go to state 11
    SHOW         shift, and go to state 12
    ISLOCAL      shift, and go to state 13
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    XU           shift, and go to state 159
    NAME         shift, and go to state 160
    PNAME        shift, and go to state 117
    INAME        shift, and go to state 161
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58
    '{'          shift, and go to state 162

    TYPE   reduce using rule 67 (vis)
    UNAME  reduce using rule 67 (vis)

    l_par      go to state 163
    ccode      go to state 164
    cexpr      go to state 125
    sequence   go to state 397
    step       go to state 166
    vis        go to state 32
    one_decl   go to state 167
    varref     go to state 168
    pfld       go to state 127
    cmpnd      go to state 128
    stmnt      go to state 169
    for_pre    go to state 170
    Special    go to state 171
    Stmnt      go to state 172
    expr       go to state 173
    full_expr  go to state 174
    ltl_expr   go to state 130
    Expr       go to state 175
    Probe      go to state 176


State 335

  116 Special: IF options FI .

    $default  reduce using rule 116 (Special)


State 336

  158 options: option options .

    $default  reduce using rule 158 (options)


State 337

  118 Special: DO $@19 options . OD

    OD  shift, and go to state 398


State 338

  105 for_pre: FOR l_par $@14 . varref

    NAME  shift, and go to state 116

    varref  go to state 399
    pfld    go to state 127
    cmpnd   go to state 128


State 339

  115 Special: SELECT l_par varref . ':' expr DOTDOT expr r_par

    ':'  shift, and go to state 400


State 340

  145 Stmnt: ATOMIC '{' $@25 . sequence OS '}'

    error        shift, and go to state 140
    ASSERT       shift, and go to state 141
    PRINT        shift, and go to state 142
    PRINTM       shift, and go to state 143
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    SET_P        shift, and go to state 144
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    RETURN       shift, and go to state 145
    GOTO         shift, and go to state 146
    BREAK        shift, and go to state 147
    ELSE         shift, and go to state 148
    IF           shift, and go to state 149
    DO           shift, and go to state 150
    FOR          shift, and go to state 151
    SELECT       shift, and go to state 152
    ATOMIC       shift, and go to state 153
    D_STEP       shift, and go to state 154
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    HIDDEN       shift, and go to state 11
    SHOW         shift, and go to state 12
    ISLOCAL      shift, and go to state 13
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    XU           shift, and go to state 159
    NAME         shift, and go to state 160
    PNAME        shift, and go to state 117
    INAME        shift, and go to state 161
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58
    '{'          shift, and go to state 162

    TYPE   reduce using rule 67 (vis)
    UNAME  reduce using rule 67 (vis)

    l_par      go to state 163
    ccode      go to state 164
    cexpr      go to state 125
    sequence   go to state 401
    step       go to state 166
    vis        go to state 32
    one_decl   go to state 167
    varref     go to state 168
    pfld       go to state 127
    cmpnd      go to state 128
    stmnt      go to state 169
    for_pre    go to state 170
    Special    go to state 171
    Stmnt      go to state 172
    expr       go to state 173
    full_expr  go to state 174
    ltl_expr   go to state 130
    Expr       go to state 175
    Probe      go to state 176


State 341

  147 Stmnt: D_STEP '{' $@26 . sequence OS '}'

    error        shift, and go to state 140
    ASSERT       shift, and go to state 141
    PRINT        shift, and go to state 142
    PRINTM       shift, and go to state 143
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    SET_P        shift, and go to state 144
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    RETURN       shift, and go to state 145
    GOTO         shift, and go to state 146
    BREAK        shift, and go to state 147
    ELSE         shift, and go to state 148
    IF           shift, and go to state 149
    DO           shift, and go to state 150
    FOR          shift, and go to state 151
    SELECT       shift, and go to state 152
    ATOMIC       shift, and go to state 153
    D_STEP       shift, and go to state 154
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    HIDDEN       shift, and go to state 11
    SHOW         shift, and go to state 12
    ISLOCAL      shift, and go to state 13
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    XU           shift, and go to state 159
    NAME         shift, and go to state 160
    PNAME        shift, and go to state 117
    INAME        shift, and go to state 161
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58
    '{'          shift, and go to state 162

    TYPE   reduce using rule 67 (vis)
    UNAME  reduce using rule 67 (vis)

    l_par      go to state 163
    ccode      go to state 164
    cexpr      go to state 125
    sequence   go to state 402
    step       go to state 166
    vis        go to state 32
    one_decl   go to state 167
    varref     go to state 168
    pfld       go to state 127
    cmpnd      go to state 128
    stmnt      go to state 169
    for_pre    go to state 170
    Special    go to state 171
    Stmnt      go to state 172
    expr       go to state 173
    full_expr  go to state 174
    ltl_expr   go to state 130
    Expr       go to state 175
    Probe      go to state 176


State 342

  240 Probe: FULL l_par varref . r_par

    ')'  shift, and go to state 133

    r_par  go to state 403


State 343

  242 Probe: EMPTY l_par varref . r_par

    ')'  shift, and go to state 133

    r_par  go to state 404


State 344

  241 Probe: NFULL l_par varref . r_par

    ')'  shift, and go to state 133

    r_par  go to state 405


State 345

  243 Probe: NEMPTY l_par varref . r_par

    ')'  shift, and go to state 133

    r_par  go to state 406


State 346

   81 vref_lst: varref ',' . vref_lst

    NAME  shift, and go to state 116

    vref_lst  go to state 407
    varref    go to state 255
    pfld      go to state 127
    cmpnd     go to state 128


State 347

   63 step: NAME ':' XU .

    $default  reduce using rule 63 (step)


State 348

   95 pfld: NAME .
   97     | NAME . $@12 '[' expr ']'
  121 Special: NAME . ':' stmnt
  122        | NAME . ':'

    ':'  shift, and go to state 408

    '['       reduce using rule 96 ($@12)
    $default  reduce using rule 95 (pfld)

    $@12  go to state 197


State 349

   62 step: NAME ':' one_decl .

    $default  reduce using rule 62 (step)


State 350

  121 Special: NAME ':' stmnt .

    $default  reduce using rule 121 (Special)


State 351

  152 Stmnt: INAME $@28 l_par . args r_par $@29 Stmnt

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    $default  reduce using rule 253 (args)

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 129
    ltl_expr  go to state 130
    args      go to state 409
    arg       go to state 132


State 352

   59 sequence: sequence . MS step
  149 Stmnt: '{' $@27 sequence . OS '}'

    SEMI   shift, and go to state 8
    ARROW  shift, and go to state 9

    $default  reduce using rule 161 (OS)

    OS    go to state 410
    semi  go to state 262
    MS    go to state 263


State 353

  233 Expr: l_par Expr r_par .

    $default  reduce using rule 233 (Expr)


State 354

   57 body: '{' $@9 sequence OS $@10 . '}'

    '}'  shift, and go to state 411


State 355

   59 sequence: sequence MS step .

    $default  reduce using rule 59 (sequence)


State 356

  166 MS: MS semi .

    $default  reduce using rule 166 (MS)


State 357

  155 Stmnt: varref ASGN INAME . $@30 l_par args r_par $@31 Stmnt

    $default  reduce using rule 153 ($@30)

    $@30  go to state 412


State 358

  124 Stmnt: varref ASGN full_expr .

    $default  reduce using rule 124 (Stmnt)


State 359

  110 Special: varref SND $@16 . margs

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 413
    ltl_expr  go to state 130
    margs     go to state 414
    arg       go to state 415


State 360

  141 Stmnt: varref O_SND $@24 . margs

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 413
    ltl_expr  go to state 130
    margs     go to state 416
    arg       go to state 415


State 361

  108 Special: varref RCV $@15 . rargs

    EVAL   shift, and go to state 417
    CONST  shift, and go to state 418
    NAME   shift, and go to state 116
    '-'    shift, and go to state 419
    '('    shift, and go to state 58

    l_par   go to state 420
    varref  go to state 421
    pfld    go to state 127
    cmpnd   go to state 128
    rarg    go to state 422
    rargs   go to state 423


State 362

  137 Stmnt: varref RCV $@22 . LT rargs GT

    LT  shift, and go to state 424


State 363

  135 Stmnt: varref R_RCV $@21 . rargs

    EVAL   shift, and go to state 417
    CONST  shift, and go to state 418
    NAME   shift, and go to state 116
    '-'    shift, and go to state 419
    '('    shift, and go to state 58

    l_par   go to state 420
    varref  go to state 421
    pfld    go to state 127
    cmpnd   go to state 128
    rarg    go to state 422
    rargs   go to state 425


State 364

  139 Stmnt: varref R_RCV $@23 . LT rargs GT

    LT  shift, and go to state 426


State 365

   66 step: stmnt UNLESS $@11 . stmnt

    error        shift, and go to state 140
    ASSERT       shift, and go to state 141
    PRINT        shift, and go to state 142
    PRINTM       shift, and go to state 143
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    SET_P        shift, and go to state 144
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    RETURN       shift, and go to state 145
    GOTO         shift, and go to state 146
    BREAK        shift, and go to state 147
    ELSE         shift, and go to state 148
    IF           shift, and go to state 149
    DO           shift, and go to state 150
    FOR          shift, and go to state 151
    SELECT       shift, and go to state 152
    ATOMIC       shift, and go to state 153
    D_STEP       shift, and go to state 154
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    NAME         shift, and go to state 348
    PNAME        shift, and go to state 117
    INAME        shift, and go to state 161
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58
    '{'          shift, and go to state 162

    l_par      go to state 163
    ccode      go to state 164
    cexpr      go to state 125
    varref     go to state 168
    pfld       go to state 127
    cmpnd      go to state 128
    stmnt      go to state 427
    for_pre    go to state 170
    Special    go to state 171
    Stmnt      go to state 172
    expr       go to state 173
    full_expr  go to state 174
    ltl_expr   go to state 130
    Expr       go to state 175
    Probe      go to state 176


State 366

  114 Special: for_pre IN varref . r_par @18 for_post

    ')'  shift, and go to state 133

    r_par  go to state 428


State 367

  112 Special: for_pre ':' expr . DOTDOT expr r_par $@17 for_post
  178 expr: expr . '+' expr
  179     | expr . '-' expr
  180     | expr . '*' expr
  181     | expr . '/' expr
  182     | expr . '%' expr
  183     | expr . '&' expr
  184     | expr . '^' expr
  185     | expr . '|' expr
  186     | expr . GT expr
  187     | expr . LT expr
  188     | expr . GE expr
  189     | expr . LE expr
  190     | expr . EQ expr
  191     | expr . NE expr
  192     | expr . AND expr
  193     | expr . OR expr
  194     | expr . LSHIFT expr
  195     | expr . RSHIFT expr
  224 ltl_expr: expr . UNTIL expr
  225         | expr . RELEASE expr
  226         | expr . WEAK_UNTIL expr
  227         | expr . IMPLIES expr
  228         | expr . EQUIV expr

    DOTDOT      shift, and go to state 429
    IMPLIES     shift, and go to state 211
    EQUIV       shift, and go to state 212
    OR          shift, and go to state 213
    AND         shift, and go to state 214
    UNTIL       shift, and go to state 215
    WEAK_UNTIL  shift, and go to state 216
    RELEASE     shift, and go to state 217
    '|'         shift, and go to state 218
    '^'         shift, and go to state 219
    '&'         shift, and go to state 220
    EQ          shift, and go to state 221
    NE          shift, and go to state 222
    GT          shift, and go to state 223
    LT          shift, and go to state 224
    GE          shift, and go to state 225
    LE          shift, and go to state 226
    LSHIFT      shift, and go to state 227
    RSHIFT      shift, and go to state 228
    '+'         shift, and go to state 229
    '-'         shift, and go to state 230
    '*'         shift, and go to state 231
    '/'         shift, and go to state 232
    '%'         shift, and go to state 233


State 368

  178 expr: expr . '+' expr
  179     | expr . '-' expr
  180     | expr . '*' expr
  181     | expr . '/' expr
  182     | expr . '%' expr
  183     | expr . '&' expr
  184     | expr . '^' expr
  185     | expr . '|' expr
  186     | expr . GT expr
  187     | expr . LT expr
  188     | expr . GE expr
  189     | expr . LE expr
  190     | expr . EQ expr
  191     | expr . NE expr
  192     | expr . AND expr
  193     | expr . OR expr
  193     | expr OR expr .
  194     | expr . LSHIFT expr
  195     | expr . RSHIFT expr
  224 ltl_expr: expr . UNTIL expr
  225         | expr . RELEASE expr
  226         | expr . WEAK_UNTIL expr
  227         | expr . IMPLIES expr
  228         | expr . EQUIV expr
  236 Expr: expr . AND Expr
  239     | expr . OR Expr

    AND         shift, and go to state 275
    UNTIL       shift, and go to state 215
    WEAK_UNTIL  shift, and go to state 216
    RELEASE     shift, and go to state 217
    '|'         shift, and go to state 218
    '^'         shift, and go to state 219
    '&'         shift, and go to state 220
    EQ          shift, and go to state 221
    NE          shift, and go to state 222
    GT          shift, and go to state 223
    LT          shift, and go to state 224
    GE          shift, and go to state 225
    LE          shift, and go to state 226
    LSHIFT      shift, and go to state 227
    RSHIFT      shift, and go to state 228
    '+'         shift, and go to state 229
    '-'         shift, and go to state 230
    '*'         shift, and go to state 231
    '/'         shift, and go to state 232
    '%'         shift, and go to state 233

    $default  reduce using rule 193 (expr)


State 369

  234 Expr: Expr . AND Expr
  235     | Expr . AND expr
  237     | Expr . OR Expr
  238     | Expr . OR expr
  239     | expr OR Expr .

    AND  shift, and go to state 277

    $default  reduce using rule 239 (Expr)


State 370

  178 expr: expr . '+' expr
  179     | expr . '-' expr
  180     | expr . '*' expr
  181     | expr . '/' expr
  182     | expr . '%' expr
  183     | expr . '&' expr
  184     | expr . '^' expr
  185     | expr . '|' expr
  186     | expr . GT expr
  187     | expr . LT expr
  188     | expr . GE expr
  189     | expr . LE expr
  190     | expr . EQ expr
  191     | expr . NE expr
  192     | expr . AND expr
  192     | expr AND expr .
  193     | expr . OR expr
  194     | expr . LSHIFT expr
  195     | expr . RSHIFT expr
  224 ltl_expr: expr . UNTIL expr
  225         | expr . RELEASE expr
  226         | expr . WEAK_UNTIL expr
  227         | expr . IMPLIES expr
  228         | expr . EQUIV expr
  236 Expr: expr . AND Expr
  239     | expr . OR Expr

    UNTIL       shift, and go to state 215
    WEAK_UNTIL  shift, and go to state 216
    RELEASE     shift, and go to state 217
    '|'         shift, and go to state 218
    '^'         shift, and go to state 219
    '&'         shift, and go to state 220
    EQ          shift, and go to state 221
    NE          shift, and go to state 222
    GT          shift, and go to state 223
    LT          shift, and go to state 224
    GE          shift, and go to state 225
    LE          shift, and go to state 226
    LSHIFT      shift, and go to state 227
    RSHIFT      shift, and go to state 228
    '+'         shift, and go to state 229
    '-'         shift, and go to state 230
    '*'         shift, and go to state 231
    '/'         shift, and go to state 232
    '%'         shift, and go to state 233

    $default  reduce using rule 192 (expr)


State 371

  234 Expr: Expr . AND Expr
  235     | Expr . AND expr
  236     | expr AND Expr .
  237     | Expr . OR Expr
  238     | Expr . OR expr

    $default  reduce using rule 236 (Expr)


State 372

  178 expr: expr . '+' expr
  179     | expr . '-' expr
  180     | expr . '*' expr
  181     | expr . '/' expr
  182     | expr . '%' expr
  183     | expr . '&' expr
  184     | expr . '^' expr
  185     | expr . '|' expr
  186     | expr . GT expr
  187     | expr . LT expr
  188     | expr . GE expr
  189     | expr . LE expr
  190     | expr . EQ expr
  191     | expr . NE expr
  192     | expr . AND expr
  193     | expr . OR expr
  194     | expr . LSHIFT expr
  195     | expr . RSHIFT expr
  224 ltl_expr: expr . UNTIL expr
  225         | expr . RELEASE expr
  226         | expr . WEAK_UNTIL expr
  227         | expr . IMPLIES expr
  228         | expr . EQUIV expr
  236 Expr: expr . AND Expr
  238     | Expr OR expr .
  239     | expr . OR Expr

    IMPLIES     shift, and go to state 211
    EQUIV       shift, and go to state 212
    AND         shift, and go to state 275
    UNTIL       shift, and go to state 215
    WEAK_UNTIL  shift, and go to state 216
    RELEASE     shift, and go to state 217
    '|'         shift, and go to state 218
    '^'         shift, and go to state 219
    '&'         shift, and go to state 220
    EQ          shift, and go to state 221
    NE          shift, and go to state 222
    GT          shift, and go to state 223
    LT          shift, and go to state 224
    GE          shift, and go to state 225
    LE          shift, and go to state 226
    LSHIFT      shift, and go to state 227
    RSHIFT      shift, and go to state 228
    '+'         shift, and go to state 229
    '-'         shift, and go to state 230
    '*'         shift, and go to state 231
    '/'         shift, and go to state 232
    '%'         shift, and go to state 233

    $default  reduce using rule 238 (Expr)


State 373

  234 Expr: Expr . AND Expr
  235     | Expr . AND expr
  237     | Expr . OR Expr
  237     | Expr OR Expr .
  238     | Expr . OR expr

    AND  shift, and go to state 277

    $default  reduce using rule 237 (Expr)


State 374

  178 expr: expr . '+' expr
  179     | expr . '-' expr
  180     | expr . '*' expr
  181     | expr . '/' expr
  182     | expr . '%' expr
  183     | expr . '&' expr
  184     | expr . '^' expr
  185     | expr . '|' expr
  186     | expr . GT expr
  187     | expr . LT expr
  188     | expr . GE expr
  189     | expr . LE expr
  190     | expr . EQ expr
  191     | expr . NE expr
  192     | expr . AND expr
  193     | expr . OR expr
  194     | expr . LSHIFT expr
  195     | expr . RSHIFT expr
  224 ltl_expr: expr . UNTIL expr
  225         | expr . RELEASE expr
  226         | expr . WEAK_UNTIL expr
  227         | expr . IMPLIES expr
  228         | expr . EQUIV expr
  235 Expr: Expr AND expr .
  236     | expr . AND Expr
  239     | expr . OR Expr

    IMPLIES     shift, and go to state 211
    EQUIV       shift, and go to state 212
    UNTIL       shift, and go to state 215
    WEAK_UNTIL  shift, and go to state 216
    RELEASE     shift, and go to state 217
    '|'         shift, and go to state 218
    '^'         shift, and go to state 219
    '&'         shift, and go to state 220
    EQ          shift, and go to state 221
    NE          shift, and go to state 222
    GT          shift, and go to state 223
    LT          shift, and go to state 224
    GE          shift, and go to state 225
    LE          shift, and go to state 226
    LSHIFT      shift, and go to state 227
    RSHIFT      shift, and go to state 228
    '+'         shift, and go to state 229
    '-'         shift, and go to state 230
    '*'         shift, and go to state 231
    '/'         shift, and go to state 232
    '%'         shift, and go to state 233

    $default  reduce using rule 235 (Expr)


State 375

  234 Expr: Expr . AND Expr
  234     | Expr AND Expr .
  235     | Expr . AND expr
  237     | Expr . OR Expr
  238     | Expr . OR expr

    $default  reduce using rule 234 (Expr)


State 376

   30 ltl_body: '{' full_expr OS '}' .

    $default  reduce using rule 30 (ltl_body)


State 377

   19 proc: inst proctype NAME $@1 l_par decl r_par . $@2 Opt_priority Opt_enabler body

    $default  reduce using rule 18 ($@2)

    $@2  go to state 430


State 378

   90 ch_init: '[' const_expr ']' . OF '{' typ_list '}'

    OF  shift, and go to state 431


State 379

   85 c_list: CONST ',' . c_list

    CONST  shift, and go to state 287

    c_list  go to state 432


State 380

   87 ivar: vardcl ASGN '{' c_list '}' .

    $default  reduce using rule 87 (ivar)


State 381

  201 expr: RUN aname $@33 l_par . args r_par Opt_priority

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    $default  reduce using rule 253 (args)

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 129
    ltl_expr  go to state 130
    args      go to state 433
    arg       go to state 132


State 382

  202 expr: LEN l_par varref r_par .

    $default  reduce using rule 202 (expr)


State 383

  203 expr: ENABLED l_par expr r_par .

    $default  reduce using rule 203 (expr)


State 384

  204 expr: GET_P l_par expr r_par .

    $default  reduce using rule 204 (expr)


State 385

  214 expr: PC_VAL l_par expr r_par .

    $default  reduce using rule 214 (expr)


State 386

   97 pfld: NAME $@12 '[' expr . ']'
  178 expr: expr . '+' expr
  179     | expr . '-' expr
  180     | expr . '*' expr
  181     | expr . '/' expr
  182     | expr . '%' expr
  183     | expr . '&' expr
  184     | expr . '^' expr
  185     | expr . '|' expr
  186     | expr . GT expr
  187     | expr . LT expr
  188     | expr . GE expr
  189     | expr . LE expr
  190     | expr . EQ expr
  191     | expr . NE expr
  192     | expr . AND expr
  193     | expr . OR expr
  194     | expr . LSHIFT expr
  195     | expr . RSHIFT expr
  224 ltl_expr: expr . UNTIL expr
  225         | expr . RELEASE expr
  226         | expr . WEAK_UNTIL expr
  227         | expr . IMPLIES expr
  228         | expr . EQUIV expr

    IMPLIES     shift, and go to state 211
    EQUIV       shift, and go to state 212
    OR          shift, and go to state 213
    AND         shift, and go to state 214
    UNTIL       shift, and go to state 215
    WEAK_UNTIL  shift, and go to state 216
    RELEASE     shift, and go to state 217
    '|'         shift, and go to state 218
    '^'         shift, and go to state 219
    '&'         shift, and go to state 220
    EQ          shift, and go to state 221
    NE          shift, and go to state 222
    GT          shift, and go to state 223
    LT          shift, and go to state 224
    GE          shift, and go to state 225
    LE          shift, and go to state 226
    LSHIFT      shift, and go to state 227
    RSHIFT      shift, and go to state 228
    '+'         shift, and go to state 229
    '-'         shift, and go to state 230
    '*'         shift, and go to state 231
    '/'         shift, and go to state 232
    '%'         shift, and go to state 233
    ']'         shift, and go to state 434


State 387

  215 expr: PNAME '[' expr ']' . '@' NAME
  216     | PNAME '[' expr ']' . ':' pfld

    ':'  shift, and go to state 435
    '@'  shift, and go to state 436


State 388

  178 expr: expr . '+' expr
  179     | expr . '-' expr
  180     | expr . '*' expr
  181     | expr . '/' expr
  182     | expr . '%' expr
  183     | expr . '&' expr
  184     | expr . '^' expr
  185     | expr . '|' expr
  186     | expr . GT expr
  187     | expr . LT expr
  188     | expr . GE expr
  189     | expr . LE expr
  190     | expr . EQ expr
  191     | expr . NE expr
  192     | expr . AND expr
  193     | expr . OR expr
  194     | expr . LSHIFT expr
  195     | expr . RSHIFT expr
  199     | l_par expr ARROW expr . ':' expr r_par
  224 ltl_expr: expr . UNTIL expr
  225         | expr . RELEASE expr
  226         | expr . WEAK_UNTIL expr
  227         | expr . IMPLIES expr
  228         | expr . EQUIV expr

    IMPLIES     shift, and go to state 211
    EQUIV       shift, and go to state 212
    OR          shift, and go to state 213
    AND         shift, and go to state 214
    UNTIL       shift, and go to state 215
    WEAK_UNTIL  shift, and go to state 216
    RELEASE     shift, and go to state 217
    '|'         shift, and go to state 218
    '^'         shift, and go to state 219
    '&'         shift, and go to state 220
    EQ          shift, and go to state 221
    NE          shift, and go to state 222
    GT          shift, and go to state 223
    LT          shift, and go to state 224
    GE          shift, and go to state 225
    LE          shift, and go to state 226
    LSHIFT      shift, and go to state 227
    RSHIFT      shift, and go to state 228
    '+'         shift, and go to state 229
    '-'         shift, and go to state 230
    '*'         shift, and go to state 231
    '/'         shift, and go to state 232
    '%'         shift, and go to state 233
    ':'         shift, and go to state 437


State 389

  206 expr: varref RCV $@34 '[' . rargs ']'

    EVAL   shift, and go to state 417
    CONST  shift, and go to state 418
    NAME   shift, and go to state 116
    '-'    shift, and go to state 419
    '('    shift, and go to state 58

    l_par   go to state 420
    varref  go to state 421
    pfld    go to state 127
    cmpnd   go to state 128
    rarg    go to state 422
    rargs   go to state 438


State 390

  208 expr: varref R_RCV $@35 '[' . rargs ']'

    EVAL   shift, and go to state 417
    CONST  shift, and go to state 418
    NAME   shift, and go to state 116
    '-'    shift, and go to state 419
    '('    shift, and go to state 58

    l_par   go to state 420
    varref  go to state 421
    pfld    go to state 127
    cmpnd   go to state 128
    rarg    go to state 422
    rargs   go to state 439


State 391

  101 sfld: '.' cmpnd .

    $default  reduce using rule 101 (sfld)


State 392

  129 Stmnt: PRINT l_par STRING $@20 . prargs r_par

    ','  shift, and go to state 440

    $default  reduce using rule 255 (prargs)

    prargs  go to state 441


State 393

  131 Stmnt: PRINTM l_par CONST r_par .

    $default  reduce using rule 131 (Stmnt)


State 394

  130 Stmnt: PRINTM l_par varref r_par .

    $default  reduce using rule 130 (Stmnt)


State 395

  252 two_args: expr ',' . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 442
    ltl_expr  go to state 130


State 396

  127 Stmnt: SET_P l_par two_args r_par .

    $default  reduce using rule 127 (Stmnt)


State 397

   59 sequence: sequence . MS step
  160 option: SEP $@32 sequence . OS

    SEMI   shift, and go to state 8
    ARROW  shift, and go to state 9

    $default  reduce using rule 161 (OS)

    OS    go to state 443
    semi  go to state 262
    MS    go to state 263


State 398

  118 Special: DO $@19 options OD .

    $default  reduce using rule 118 (Special)


State 399

  105 for_pre: FOR l_par $@14 varref .

    $default  reduce using rule 105 (for_pre)


State 400

  115 Special: SELECT l_par varref ':' . expr DOTDOT expr r_par

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 444
    ltl_expr  go to state 130


State 401

   59 sequence: sequence . MS step
  145 Stmnt: ATOMIC '{' $@25 sequence . OS '}'

    SEMI   shift, and go to state 8
    ARROW  shift, and go to state 9

    $default  reduce using rule 161 (OS)

    OS    go to state 445
    semi  go to state 262
    MS    go to state 263


State 402

   59 sequence: sequence . MS step
  147 Stmnt: D_STEP '{' $@26 sequence . OS '}'

    SEMI   shift, and go to state 8
    ARROW  shift, and go to state 9

    $default  reduce using rule 161 (OS)

    OS    go to state 446
    semi  go to state 262
    MS    go to state 263


State 403

  240 Probe: FULL l_par varref r_par .

    $default  reduce using rule 240 (Probe)


State 404

  242 Probe: EMPTY l_par varref r_par .

    $default  reduce using rule 242 (Probe)


State 405

  241 Probe: NFULL l_par varref r_par .

    $default  reduce using rule 241 (Probe)


State 406

  243 Probe: NEMPTY l_par varref r_par .

    $default  reduce using rule 243 (Probe)


State 407

   81 vref_lst: varref ',' vref_lst .

    $default  reduce using rule 81 (vref_lst)


State 408

  121 Special: NAME ':' . stmnt
  122        | NAME ':' .

    error        shift, and go to state 140
    ASSERT       shift, and go to state 141
    PRINT        shift, and go to state 142
    PRINTM       shift, and go to state 143
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    SET_P        shift, and go to state 144
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    RETURN       shift, and go to state 145
    GOTO         shift, and go to state 146
    BREAK        shift, and go to state 147
    ELSE         shift, and go to state 148
    IF           shift, and go to state 149
    DO           shift, and go to state 150
    FOR          shift, and go to state 151
    SELECT       shift, and go to state 152
    ATOMIC       shift, and go to state 153
    D_STEP       shift, and go to state 154
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    NAME         shift, and go to state 348
    PNAME        shift, and go to state 117
    INAME        shift, and go to state 161
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58
    '{'          shift, and go to state 162

    SEMI    reduce using rule 122 (Special)
    ARROW   reduce using rule 122 (Special)
    FI      reduce using rule 122 (Special)
    OD      reduce using rule 122 (Special)
    SEP     reduce using rule 122 (Special)
    UNLESS  reduce using rule 122 (Special)
    '}'     reduce using rule 122 (Special)

    l_par      go to state 163
    ccode      go to state 164
    cexpr      go to state 125
    varref     go to state 168
    pfld       go to state 127
    cmpnd      go to state 128
    stmnt      go to state 350
    for_pre    go to state 170
    Special    go to state 171
    Stmnt      go to state 172
    expr       go to state 173
    full_expr  go to state 174
    ltl_expr   go to state 130
    Expr       go to state 175
    Probe      go to state 176


State 409

  152 Stmnt: INAME $@28 l_par args . r_par $@29 Stmnt

    ')'  shift, and go to state 133

    r_par  go to state 447


State 410

  149 Stmnt: '{' $@27 sequence OS . '}'

    '}'  shift, and go to state 448


State 411

   57 body: '{' $@9 sequence OS $@10 '}' .

    $default  reduce using rule 57 (body)


State 412

  155 Stmnt: varref ASGN INAME $@30 . l_par args r_par $@31 Stmnt

    '('  shift, and go to state 58

    l_par  go to state 449


State 413

  178 expr: expr . '+' expr
  179     | expr . '-' expr
  180     | expr . '*' expr
  181     | expr . '/' expr
  182     | expr . '%' expr
  183     | expr . '&' expr
  184     | expr . '^' expr
  185     | expr . '|' expr
  186     | expr . GT expr
  187     | expr . LT expr
  188     | expr . GE expr
  189     | expr . LE expr
  190     | expr . EQ expr
  191     | expr . NE expr
  192     | expr . AND expr
  193     | expr . OR expr
  194     | expr . LSHIFT expr
  195     | expr . RSHIFT expr
  224 ltl_expr: expr . UNTIL expr
  225         | expr . RELEASE expr
  226         | expr . WEAK_UNTIL expr
  227         | expr . IMPLIES expr
  228         | expr . EQUIV expr
  258 margs: expr . l_par arg r_par
  259 arg: expr .
  260    | expr . ',' arg

    IMPLIES     shift, and go to state 211
    EQUIV       shift, and go to state 212
    OR          shift, and go to state 213
    AND         shift, and go to state 214
    UNTIL       shift, and go to state 215
    WEAK_UNTIL  shift, and go to state 216
    RELEASE     shift, and go to state 217
    '|'         shift, and go to state 218
    '^'         shift, and go to state 219
    '&'         shift, and go to state 220
    EQ          shift, and go to state 221
    NE          shift, and go to state 222
    GT          shift, and go to state 223
    LT          shift, and go to state 224
    GE          shift, and go to state 225
    LE          shift, and go to state 226
    LSHIFT      shift, and go to state 227
    RSHIFT      shift, and go to state 228
    '+'         shift, and go to state 229
    '-'         shift, and go to state 230
    '*'         shift, and go to state 231
    '/'         shift, and go to state 232
    '%'         shift, and go to state 233
    '('         shift, and go to state 58
    ','         shift, and go to state 234

    $default  reduce using rule 259 (arg)

    l_par  go to state 450


State 414

  110 Special: varref SND $@16 margs .

    $default  reduce using rule 110 (Special)


State 415

  257 margs: arg .

    $default  reduce using rule 257 (margs)


State 416

  141 Stmnt: varref O_SND $@24 margs .

    $default  reduce using rule 141 (Stmnt)


State 417

  262 rarg: EVAL . l_par expr r_par

    '('  shift, and go to state 58

    l_par  go to state 451


State 418

  263 rarg: CONST .

    $default  reduce using rule 263 (rarg)


State 419

  264 rarg: '-' . CONST

    CONST  shift, and go to state 452


State 420

  268 rargs: l_par . rargs r_par

    EVAL   shift, and go to state 417
    CONST  shift, and go to state 418
    NAME   shift, and go to state 116
    '-'    shift, and go to state 419
    '('    shift, and go to state 58

    l_par   go to state 420
    varref  go to state 421
    pfld    go to state 127
    cmpnd   go to state 128
    rarg    go to state 422
    rargs   go to state 453


State 421

  261 rarg: varref .

    $default  reduce using rule 261 (rarg)


State 422

  265 rargs: rarg .
  266      | rarg . ',' rargs
  267      | rarg . l_par rargs r_par

    '('  shift, and go to state 58
    ','  shift, and go to state 454

    $default  reduce using rule 265 (rargs)

    l_par  go to state 455


State 423

  108 Special: varref RCV $@15 rargs .

    $default  reduce using rule 108 (Special)


State 424

  137 Stmnt: varref RCV $@22 LT . rargs GT

    EVAL   shift, and go to state 417
    CONST  shift, and go to state 418
    NAME   shift, and go to state 116
    '-'    shift, and go to state 419
    '('    shift, and go to state 58

    l_par   go to state 420
    varref  go to state 421
    pfld    go to state 127
    cmpnd   go to state 128
    rarg    go to state 422
    rargs   go to state 456


State 425

  135 Stmnt: varref R_RCV $@21 rargs .

    $default  reduce using rule 135 (Stmnt)


State 426

  139 Stmnt: varref R_RCV $@23 LT . rargs GT

    EVAL   shift, and go to state 417
    CONST  shift, and go to state 418
    NAME   shift, and go to state 116
    '-'    shift, and go to state 419
    '('    shift, and go to state 58

    l_par   go to state 420
    varref  go to state 421
    pfld    go to state 127
    cmpnd   go to state 128
    rarg    go to state 422
    rargs   go to state 457


State 427

   66 step: stmnt UNLESS $@11 stmnt .

    $default  reduce using rule 66 (step)


State 428

  114 Special: for_pre IN varref r_par . @18 for_post

    $default  reduce using rule 113 (@18)

    @18  go to state 458


State 429

  112 Special: for_pre ':' expr DOTDOT . expr r_par $@17 for_post

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 459
    ltl_expr  go to state 130


State 430

   19 proc: inst proctype NAME $@1 l_par decl r_par $@2 . Opt_priority Opt_enabler body

    PRIORITY  shift, and go to state 68

    $default  reduce using rule 220 (Opt_priority)

    Opt_priority  go to state 460


State 431

   90 ch_init: '[' const_expr ']' OF . '{' typ_list '}'

    '{'  shift, and go to state 461


State 432

   85 c_list: CONST ',' c_list .

    $default  reduce using rule 85 (c_list)


State 433

  201 expr: RUN aname $@33 l_par args . r_par Opt_priority

    ')'  shift, and go to state 133

    r_par  go to state 462


State 434

   97 pfld: NAME $@12 '[' expr ']' .

    $default  reduce using rule 97 (pfld)


State 435

  216 expr: PNAME '[' expr ']' ':' . pfld

    NAME  shift, and go to state 116

    pfld  go to state 463


State 436

  215 expr: PNAME '[' expr ']' '@' . NAME

    NAME  shift, and go to state 464


State 437

  199 expr: l_par expr ARROW expr ':' . expr r_par

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 465
    ltl_expr  go to state 130


State 438

  206 expr: varref RCV $@34 '[' rargs . ']'

    ']'  shift, and go to state 466


State 439

  208 expr: varref R_RCV $@35 '[' rargs . ']'

    ']'  shift, and go to state 467


State 440

  256 prargs: ',' . arg

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 129
    ltl_expr  go to state 130
    arg       go to state 468


State 441

  129 Stmnt: PRINT l_par STRING $@20 prargs . r_par

    ')'  shift, and go to state 133

    r_par  go to state 469


State 442

  178 expr: expr . '+' expr
  179     | expr . '-' expr
  180     | expr . '*' expr
  181     | expr . '/' expr
  182     | expr . '%' expr
  183     | expr . '&' expr
  184     | expr . '^' expr
  185     | expr . '|' expr
  186     | expr . GT expr
  187     | expr . LT expr
  188     | expr . GE expr
  189     | expr . LE expr
  190     | expr . EQ expr
  191     | expr . NE expr
  192     | expr . AND expr
  193     | expr . OR expr
  194     | expr . LSHIFT expr
  195     | expr . RSHIFT expr
  224 ltl_expr: expr . UNTIL expr
  225         | expr . RELEASE expr
  226         | expr . WEAK_UNTIL expr
  227         | expr . IMPLIES expr
  228         | expr . EQUIV expr
  252 two_args: expr ',' expr .

    IMPLIES     shift, and go to state 211
    EQUIV       shift, and go to state 212
    OR          shift, and go to state 213
    AND         shift, and go to state 214
    UNTIL       shift, and go to state 215
    WEAK_UNTIL  shift, and go to state 216
    RELEASE     shift, and go to state 217
    '|'         shift, and go to state 218
    '^'         shift, and go to state 219
    '&'         shift, and go to state 220
    EQ          shift, and go to state 221
    NE          shift, and go to state 222
    GT          shift, and go to state 223
    LT          shift, and go to state 224
    GE          shift, and go to state 225
    LE          shift, and go to state 226
    LSHIFT      shift, and go to state 227
    RSHIFT      shift, and go to state 228
    '+'         shift, and go to state 229
    '-'         shift, and go to state 230
    '*'         shift, and go to state 231
    '/'         shift, and go to state 232
    '%'         shift, and go to state 233

    $default  reduce using rule 252 (two_args)


State 443

  160 option: SEP $@32 sequence OS .

    $default  reduce using rule 160 (option)


State 444

  115 Special: SELECT l_par varref ':' expr . DOTDOT expr r_par
  178 expr: expr . '+' expr
  179     | expr . '-' expr
  180     | expr . '*' expr
  181     | expr . '/' expr
  182     | expr . '%' expr
  183     | expr . '&' expr
  184     | expr . '^' expr
  185     | expr . '|' expr
  186     | expr . GT expr
  187     | expr . LT expr
  188     | expr . GE expr
  189     | expr . LE expr
  190     | expr . EQ expr
  191     | expr . NE expr
  192     | expr . AND expr
  193     | expr . OR expr
  194     | expr . LSHIFT expr
  195     | expr . RSHIFT expr
  224 ltl_expr: expr . UNTIL expr
  225         | expr . RELEASE expr
  226         | expr . WEAK_UNTIL expr
  227         | expr . IMPLIES expr
  228         | expr . EQUIV expr

    DOTDOT      shift, and go to state 470
    IMPLIES     shift, and go to state 211
    EQUIV       shift, and go to state 212
    OR          shift, and go to state 213
    AND         shift, and go to state 214
    UNTIL       shift, and go to state 215
    WEAK_UNTIL  shift, and go to state 216
    RELEASE     shift, and go to state 217
    '|'         shift, and go to state 218
    '^'         shift, and go to state 219
    '&'         shift, and go to state 220
    EQ          shift, and go to state 221
    NE          shift, and go to state 222
    GT          shift, and go to state 223
    LT          shift, and go to state 224
    GE          shift, and go to state 225
    LE          shift, and go to state 226
    LSHIFT      shift, and go to state 227
    RSHIFT      shift, and go to state 228
    '+'         shift, and go to state 229
    '-'         shift, and go to state 230
    '*'         shift, and go to state 231
    '/'         shift, and go to state 232
    '%'         shift, and go to state 233


State 445

  145 Stmnt: ATOMIC '{' $@25 sequence OS . '}'

    '}'  shift, and go to state 471


State 446

  147 Stmnt: D_STEP '{' $@26 sequence OS . '}'

    '}'  shift, and go to state 472


State 447

  152 Stmnt: INAME $@28 l_par args r_par . $@29 Stmnt

    $default  reduce using rule 151 ($@29)

    $@29  go to state 473


State 448

  149 Stmnt: '{' $@27 sequence OS '}' .

    $default  reduce using rule 149 (Stmnt)


State 449

  155 Stmnt: varref ASGN INAME $@30 l_par . args r_par $@31 Stmnt

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    $default  reduce using rule 253 (args)

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 129
    ltl_expr  go to state 130
    args      go to state 474
    arg       go to state 132


State 450

  258 margs: expr l_par . arg r_par

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 129
    ltl_expr  go to state 130
    arg       go to state 475


State 451

  262 rarg: EVAL l_par . expr r_par

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 476
    ltl_expr  go to state 130


State 452

  264 rarg: '-' CONST .

    $default  reduce using rule 264 (rarg)


State 453

  268 rargs: l_par rargs . r_par

    ')'  shift, and go to state 133

    r_par  go to state 477


State 454

  266 rargs: rarg ',' . rargs

    EVAL   shift, and go to state 417
    CONST  shift, and go to state 418
    NAME   shift, and go to state 116
    '-'    shift, and go to state 419
    '('    shift, and go to state 58

    l_par   go to state 420
    varref  go to state 421
    pfld    go to state 127
    cmpnd   go to state 128
    rarg    go to state 422
    rargs   go to state 478


State 455

  267 rargs: rarg l_par . rargs r_par

    EVAL   shift, and go to state 417
    CONST  shift, and go to state 418
    NAME   shift, and go to state 116
    '-'    shift, and go to state 419
    '('    shift, and go to state 58

    l_par   go to state 420
    varref  go to state 421
    pfld    go to state 127
    cmpnd   go to state 128
    rarg    go to state 422
    rargs   go to state 479


State 456

  137 Stmnt: varref RCV $@22 LT rargs . GT

    GT  shift, and go to state 480


State 457

  139 Stmnt: varref R_RCV $@23 LT rargs . GT

    GT  shift, and go to state 481


State 458

  114 Special: for_pre IN varref r_par @18 . for_post

    '{'  shift, and go to state 482

    for_post  go to state 483


State 459

  112 Special: for_pre ':' expr DOTDOT expr . r_par $@17 for_post
  178 expr: expr . '+' expr
  179     | expr . '-' expr
  180     | expr . '*' expr
  181     | expr . '/' expr
  182     | expr . '%' expr
  183     | expr . '&' expr
  184     | expr . '^' expr
  185     | expr . '|' expr
  186     | expr . GT expr
  187     | expr . LT expr
  188     | expr . GE expr
  189     | expr . LE expr
  190     | expr . EQ expr
  191     | expr . NE expr
  192     | expr . AND expr
  193     | expr . OR expr
  194     | expr . LSHIFT expr
  195     | expr . RSHIFT expr
  224 ltl_expr: expr . UNTIL expr
  225         | expr . RELEASE expr
  226         | expr . WEAK_UNTIL expr
  227         | expr . IMPLIES expr
  228         | expr . EQUIV expr

    IMPLIES     shift, and go to state 211
    EQUIV       shift, and go to state 212
    OR          shift, and go to state 213
    AND         shift, and go to state 214
    UNTIL       shift, and go to state 215
    WEAK_UNTIL  shift, and go to state 216
    RELEASE     shift, and go to state 217
    '|'         shift, and go to state 218
    '^'         shift, and go to state 219
    '&'         shift, and go to state 220
    EQ          shift, and go to state 221
    NE          shift, and go to state 222
    GT          shift, and go to state 223
    LT          shift, and go to state 224
    GE          shift, and go to state 225
    LE          shift, and go to state 226
    LSHIFT      shift, and go to state 227
    RSHIFT      shift, and go to state 228
    '+'         shift, and go to state 229
    '-'         shift, and go to state 230
    '*'         shift, and go to state 231
    '/'         shift, and go to state 232
    '%'         shift, and go to state 233
    ')'         shift, and go to state 133

    r_par  go to state 484


State 460

   19 proc: inst proctype NAME $@1 l_par decl r_par $@2 Opt_priority . Opt_enabler body

    PROVIDED  shift, and go to state 485

    $default  reduce using rule 244 (Opt_enabler)

    Opt_enabler  go to state 486


State 461

   90 ch_init: '[' const_expr ']' OF '{' . typ_list '}'

    error  shift, and go to state 487
    TYPE   shift, and go to state 488
    UNAME  shift, and go to state 489

    basetype  go to state 490
    typ_list  go to state 491


State 462

  201 expr: RUN aname $@33 l_par args r_par . Opt_priority

    PRIORITY  shift, and go to state 68

    $default  reduce using rule 220 (Opt_priority)

    Opt_priority  go to state 492


State 463

  216 expr: PNAME '[' expr ']' ':' pfld .

    $default  reduce using rule 216 (expr)


State 464

  215 expr: PNAME '[' expr ']' '@' NAME .

    $default  reduce using rule 215 (expr)


State 465

  178 expr: expr . '+' expr
  179     | expr . '-' expr
  180     | expr . '*' expr
  181     | expr . '/' expr
  182     | expr . '%' expr
  183     | expr . '&' expr
  184     | expr . '^' expr
  185     | expr . '|' expr
  186     | expr . GT expr
  187     | expr . LT expr
  188     | expr . GE expr
  189     | expr . LE expr
  190     | expr . EQ expr
  191     | expr . NE expr
  192     | expr . AND expr
  193     | expr . OR expr
  194     | expr . LSHIFT expr
  195     | expr . RSHIFT expr
  199     | l_par expr ARROW expr ':' expr . r_par
  224 ltl_expr: expr . UNTIL expr
  225         | expr . RELEASE expr
  226         | expr . WEAK_UNTIL expr
  227         | expr . IMPLIES expr
  228         | expr . EQUIV expr

    IMPLIES     shift, and go to state 211
    EQUIV       shift, and go to state 212
    OR          shift, and go to state 213
    AND         shift, and go to state 214
    UNTIL       shift, and go to state 215
    WEAK_UNTIL  shift, and go to state 216
    RELEASE     shift, and go to state 217
    '|'         shift, and go to state 218
    '^'         shift, and go to state 219
    '&'         shift, and go to state 220
    EQ          shift, and go to state 221
    NE          shift, and go to state 222
    GT          shift, and go to state 223
    LT          shift, and go to state 224
    GE          shift, and go to state 225
    LE          shift, and go to state 226
    LSHIFT      shift, and go to state 227
    RSHIFT      shift, and go to state 228
    '+'         shift, and go to state 229
    '-'         shift, and go to state 230
    '*'         shift, and go to state 231
    '/'         shift, and go to state 232
    '%'         shift, and go to state 233
    ')'         shift, and go to state 133

    r_par  go to state 493


State 466

  206 expr: varref RCV $@34 '[' rargs ']' .

    $default  reduce using rule 206 (expr)


State 467

  208 expr: varref R_RCV $@35 '[' rargs ']' .

    $default  reduce using rule 208 (expr)


State 468

  256 prargs: ',' arg .

    $default  reduce using rule 256 (prargs)


State 469

  129 Stmnt: PRINT l_par STRING $@20 prargs r_par .

    $default  reduce using rule 129 (Stmnt)


State 470

  115 Special: SELECT l_par varref ':' expr DOTDOT . expr r_par

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 494
    ltl_expr  go to state 130


State 471

  145 Stmnt: ATOMIC '{' $@25 sequence OS '}' .

    $default  reduce using rule 145 (Stmnt)


State 472

  147 Stmnt: D_STEP '{' $@26 sequence OS '}' .

    $default  reduce using rule 147 (Stmnt)


State 473

  152 Stmnt: INAME $@28 l_par args r_par $@29 . Stmnt

    ASSERT       shift, and go to state 141
    PRINT        shift, and go to state 142
    PRINTM       shift, and go to state 143
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    SET_P        shift, and go to state 144
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    RETURN       shift, and go to state 145
    ELSE         shift, and go to state 148
    ATOMIC       shift, and go to state 153
    D_STEP       shift, and go to state 154
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    INAME        shift, and go to state 161
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58
    '{'          shift, and go to state 162

    l_par      go to state 163
    ccode      go to state 164
    cexpr      go to state 125
    varref     go to state 495
    pfld       go to state 127
    cmpnd      go to state 128
    Stmnt      go to state 496
    expr       go to state 173
    full_expr  go to state 174
    ltl_expr   go to state 130
    Expr       go to state 175
    Probe      go to state 176


State 474

  155 Stmnt: varref ASGN INAME $@30 l_par args . r_par $@31 Stmnt

    ')'  shift, and go to state 133

    r_par  go to state 497


State 475

  258 margs: expr l_par arg . r_par

    ')'  shift, and go to state 133

    r_par  go to state 498


State 476

  178 expr: expr . '+' expr
  179     | expr . '-' expr
  180     | expr . '*' expr
  181     | expr . '/' expr
  182     | expr . '%' expr
  183     | expr . '&' expr
  184     | expr . '^' expr
  185     | expr . '|' expr
  186     | expr . GT expr
  187     | expr . LT expr
  188     | expr . GE expr
  189     | expr . LE expr
  190     | expr . EQ expr
  191     | expr . NE expr
  192     | expr . AND expr
  193     | expr . OR expr
  194     | expr . LSHIFT expr
  195     | expr . RSHIFT expr
  224 ltl_expr: expr . UNTIL expr
  225         | expr . RELEASE expr
  226         | expr . WEAK_UNTIL expr
  227         | expr . IMPLIES expr
  228         | expr . EQUIV expr
  262 rarg: EVAL l_par expr . r_par

    IMPLIES     shift, and go to state 211
    EQUIV       shift, and go to state 212
    OR          shift, and go to state 213
    AND         shift, and go to state 214
    UNTIL       shift, and go to state 215
    WEAK_UNTIL  shift, and go to state 216
    RELEASE     shift, and go to state 217
    '|'         shift, and go to state 218
    '^'         shift, and go to state 219
    '&'         shift, and go to state 220
    EQ          shift, and go to state 221
    NE          shift, and go to state 222
    GT          shift, and go to state 223
    LT          shift, and go to state 224
    GE          shift, and go to state 225
    LE          shift, and go to state 226
    LSHIFT      shift, and go to state 227
    RSHIFT      shift, and go to state 228
    '+'         shift, and go to state 229
    '-'         shift, and go to state 230
    '*'         shift, and go to state 231
    '/'         shift, and go to state 232
    '%'         shift, and go to state 233
    ')'         shift, and go to state 133

    r_par  go to state 499


State 477

  268 rargs: l_par rargs r_par .

    $default  reduce using rule 268 (rargs)


State 478

  266 rargs: rarg ',' rargs .

    $default  reduce using rule 266 (rargs)


State 479

  267 rargs: rarg l_par rargs . r_par

    ')'  shift, and go to state 133

    r_par  go to state 500


State 480

  137 Stmnt: varref RCV $@22 LT rargs GT .

    $default  reduce using rule 137 (Stmnt)


State 481

  139 Stmnt: varref R_RCV $@23 LT rargs GT .

    $default  reduce using rule 139 (Stmnt)


State 482

  106 for_post: '{' . sequence OS '}'

    error        shift, and go to state 140
    ASSERT       shift, and go to state 141
    PRINT        shift, and go to state 142
    PRINTM       shift, and go to state 143
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    SET_P        shift, and go to state 144
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    RETURN       shift, and go to state 145
    GOTO         shift, and go to state 146
    BREAK        shift, and go to state 147
    ELSE         shift, and go to state 148
    IF           shift, and go to state 149
    DO           shift, and go to state 150
    FOR          shift, and go to state 151
    SELECT       shift, and go to state 152
    ATOMIC       shift, and go to state 153
    D_STEP       shift, and go to state 154
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    HIDDEN       shift, and go to state 11
    SHOW         shift, and go to state 12
    ISLOCAL      shift, and go to state 13
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    XU           shift, and go to state 159
    NAME         shift, and go to state 160
    PNAME        shift, and go to state 117
    INAME        shift, and go to state 161
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58
    '{'          shift, and go to state 162

    TYPE   reduce using rule 67 (vis)
    UNAME  reduce using rule 67 (vis)

    l_par      go to state 163
    ccode      go to state 164
    cexpr      go to state 125
    sequence   go to state 501
    step       go to state 166
    vis        go to state 32
    one_decl   go to state 167
    varref     go to state 168
    pfld       go to state 127
    cmpnd      go to state 128
    stmnt      go to state 169
    for_pre    go to state 170
    Special    go to state 171
    Stmnt      go to state 172
    expr       go to state 173
    full_expr  go to state 174
    ltl_expr   go to state 130
    Expr       go to state 175
    Probe      go to state 176


State 483

  114 Special: for_pre IN varref r_par @18 for_post .

    $default  reduce using rule 114 (Special)


State 484

  112 Special: for_pre ':' expr DOTDOT expr r_par . $@17 for_post

    $default  reduce using rule 111 ($@17)

    $@17  go to state 502


State 485

  245 Opt_enabler: PROVIDED . l_par full_expr r_par
  246            | PROVIDED . error

    error  shift, and go to state 503
    '('    shift, and go to state 58

    l_par  go to state 504


State 486

   19 proc: inst proctype NAME $@1 l_par decl r_par $@2 Opt_priority Opt_enabler . body

    '{'  shift, and go to state 66

    body  go to state 505


State 487

  249 basetype: error .

    $default  reduce using rule 249 (basetype)


State 488

  247 basetype: TYPE .

    $default  reduce using rule 247 (basetype)


State 489

  248 basetype: UNAME .

    $default  reduce using rule 248 (basetype)


State 490

  250 typ_list: basetype .
  251         | basetype . ',' typ_list

    ','  shift, and go to state 506

    $default  reduce using rule 250 (typ_list)


State 491

   90 ch_init: '[' const_expr ']' OF '{' typ_list . '}'

    '}'  shift, and go to state 507


State 492

  201 expr: RUN aname $@33 l_par args r_par Opt_priority .

    $default  reduce using rule 201 (expr)


State 493

  199 expr: l_par expr ARROW expr ':' expr r_par .

    $default  reduce using rule 199 (expr)


State 494

  115 Special: SELECT l_par varref ':' expr DOTDOT expr . r_par
  178 expr: expr . '+' expr
  179     | expr . '-' expr
  180     | expr . '*' expr
  181     | expr . '/' expr
  182     | expr . '%' expr
  183     | expr . '&' expr
  184     | expr . '^' expr
  185     | expr . '|' expr
  186     | expr . GT expr
  187     | expr . LT expr
  188     | expr . GE expr
  189     | expr . LE expr
  190     | expr . EQ expr
  191     | expr . NE expr
  192     | expr . AND expr
  193     | expr . OR expr
  194     | expr . LSHIFT expr
  195     | expr . RSHIFT expr
  224 ltl_expr: expr . UNTIL expr
  225         | expr . RELEASE expr
  226         | expr . WEAK_UNTIL expr
  227         | expr . IMPLIES expr
  228         | expr . EQUIV expr

    IMPLIES     shift, and go to state 211
    EQUIV       shift, and go to state 212
    OR          shift, and go to state 213
    AND         shift, and go to state 214
    UNTIL       shift, and go to state 215
    WEAK_UNTIL  shift, and go to state 216
    RELEASE     shift, and go to state 217
    '|'         shift, and go to state 218
    '^'         shift, and go to state 219
    '&'         shift, and go to state 220
    EQ          shift, and go to state 221
    NE          shift, and go to state 222
    GT          shift, and go to state 223
    LT          shift, and go to state 224
    GE          shift, and go to state 225
    LE          shift, and go to state 226
    LSHIFT      shift, and go to state 227
    RSHIFT      shift, and go to state 228
    '+'         shift, and go to state 229
    '-'         shift, and go to state 230
    '*'         shift, and go to state 231
    '/'         shift, and go to state 232
    '%'         shift, and go to state 233
    ')'         shift, and go to state 133

    r_par  go to state 508


State 495

  124 Stmnt: varref . ASGN full_expr
  125      | varref . INCR
  126      | varref . DECR
  135      | varref . R_RCV $@21 rargs
  137      | varref . RCV $@22 LT rargs GT
  139      | varref . R_RCV $@23 LT rargs GT
  141      | varref . O_SND $@24 margs
  155      | varref . ASGN INAME $@30 l_par args r_par $@31 Stmnt
  206 expr: varref . RCV $@34 '[' rargs ']'
  208     | varref . R_RCV $@35 '[' rargs ']'
  209     | varref .

    ASGN   shift, and go to state 264
    O_SND  shift, and go to state 266
    RCV    shift, and go to state 509
    R_RCV  shift, and go to state 268
    INCR   shift, and go to state 269
    DECR   shift, and go to state 270

    $default  reduce using rule 209 (expr)


State 496

  152 Stmnt: INAME $@28 l_par args r_par $@29 Stmnt .

    $default  reduce using rule 152 (Stmnt)


State 497

  155 Stmnt: varref ASGN INAME $@30 l_par args r_par . $@31 Stmnt

    $default  reduce using rule 154 ($@31)

    $@31  go to state 510


State 498

  258 margs: expr l_par arg r_par .

    $default  reduce using rule 258 (margs)


State 499

  262 rarg: EVAL l_par expr r_par .

    $default  reduce using rule 262 (rarg)


State 500

  267 rargs: rarg l_par rargs r_par .

    $default  reduce using rule 267 (rargs)


State 501

   59 sequence: sequence . MS step
  106 for_post: '{' sequence . OS '}'

    SEMI   shift, and go to state 8
    ARROW  shift, and go to state 9

    $default  reduce using rule 161 (OS)

    OS    go to state 511
    semi  go to state 262
    MS    go to state 263


State 502

  112 Special: for_pre ':' expr DOTDOT expr r_par $@17 . for_post

    '{'  shift, and go to state 482

    for_post  go to state 512


State 503

  246 Opt_enabler: PROVIDED error .

    $default  reduce using rule 246 (Opt_enabler)


State 504

  245 Opt_enabler: PROVIDED l_par . full_expr r_par

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par      go to state 163
    cexpr      go to state 125
    varref     go to state 126
    pfld       go to state 127
    cmpnd      go to state 128
    expr       go to state 173
    full_expr  go to state 513
    ltl_expr   go to state 130
    Expr       go to state 175
    Probe      go to state 176


State 505

   19 proc: inst proctype NAME $@1 l_par decl r_par $@2 Opt_priority Opt_enabler body .

    $default  reduce using rule 19 (proc)


State 506

  251 typ_list: basetype ',' . typ_list

    error  shift, and go to state 487
    TYPE   shift, and go to state 488
    UNAME  shift, and go to state 489

    basetype  go to state 490
    typ_list  go to state 514


State 507

   90 ch_init: '[' const_expr ']' OF '{' typ_list '}' .

    $default  reduce using rule 90 (ch_init)


State 508

  115 Special: SELECT l_par varref ':' expr DOTDOT expr r_par .

    $default  reduce using rule 115 (Special)


State 509

  137 Stmnt: varref RCV . $@22 LT rargs GT
  206 expr: varref RCV . $@34 '[' rargs ']'

    '['       reduce using rule 205 ($@34)
    $default  reduce using rule 136 ($@22)

    $@22  go to state 362
    $@34  go to state 301


State 510

  155 Stmnt: varref ASGN INAME $@30 l_par args r_par $@31 . Stmnt

    ASSERT       shift, and go to state 141
    PRINT        shift, and go to state 142
    PRINTM       shift, and go to state 143
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    SET_P        shift, and go to state 144
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    RETURN       shift, and go to state 145
    ELSE         shift, and go to state 148
    ATOMIC       shift, and go to state 153
    D_STEP       shift, and go to state 154
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    INAME        shift, and go to state 161
    SND          shift, and go to state 118
    ALWAYS       shift, and go to state 119
    EVENTUALLY   shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58
    '{'          shift, and go to state 162

    l_par      go to state 163
    ccode      go to state 164
    cexpr      go to state 125
    varref     go to state 495
    pfld       go to state 127
    cmpnd      go to state 128
    Stmnt      go to state 515
    expr       go to state 173
    full_expr  go to state 174
    ltl_expr   go to state 130
    Expr       go to state 175
    Probe      go to state 176


State 511

  106 for_post: '{' sequence OS . '}'

    '}'  shift, and go to state 516


State 512

  112 Special: for_pre ':' expr DOTDOT expr r_par $@17 for_post .

    $default  reduce using rule 112 (Special)


State 513

  245 Opt_enabler: PROVIDED l_par full_expr . r_par

    ')'  shift, and go to state 133

    r_par  go to state 517


State 514

  251 typ_list: basetype ',' typ_list .

    $default  reduce using rule 251 (typ_list)


State 515

  155 Stmnt: varref ASGN INAME $@30 l_par args r_par $@31 Stmnt .

    $default  reduce using rule 155 (Stmnt)


State 516

  106 for_post: '{' sequence OS '}' .

    $default  reduce using rule 106 (for_post)


State 517

  245 Opt_enabler: PROVIDED l_par full_expr r_par .

    $default  reduce using rule 245 (Opt_enabler)
